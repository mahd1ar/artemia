// ts-gql-integrity:3f2a94fbd02e5b9de592a926d721ac6a
/*
ts-gql-meta-begin
{
  "hash": "8ab8503c6e736ef556813165ab6aa7a4"
}
ts-gql-meta-end
*/
/** @deprecated This should not be used outside of code generated by ts-gql */
export type Maybe<T> = T | null;
/** @deprecated This should not be used outside of code generated by ts-gql */
export type InputMaybe<T> = Maybe<T>;
/** @deprecated This should not be used outside of code generated by ts-gql */
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
/** @deprecated This should not be used outside of code generated by ts-gql */
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
/** @deprecated This should not be used outside of code generated by ts-gql */
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };

/** @deprecated This should not be used outside of code generated by ts-gql */
export type Scalars = {
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  BigInt: BigInt;
  DateTime: DateTime;
  Upload: Upload;
  JSON: JSON;
};

export type Approval = {
  readonly __typename: "Approval";
  readonly id: string;
  readonly code: string | null;
  readonly title: string | null;
  readonly estimatedBudget: BigInt | null;
  readonly totalStatementsPayable: BigInt | null;
  readonly startDate: number | null;
  readonly estimatedEndDate: number | null;
  readonly description: ReadonlyArray<Description> | null;
  readonly descriptionCount: number | null;
  readonly createdAt: DateTime | null;
  readonly createdBy: User | null;
};

export type ApprovaldescriptionArgs = {
  readonly where?: DescriptionWhereInput;
  readonly orderBy?: TSGQLMaybeArray<DescriptionOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: DescriptionWhereUniqueInput | null;
};

export type ApprovaldescriptionCountArgs = {
  readonly where?: DescriptionWhereInput;
};

export type BigInt = any;

export type DateTime = any;

export type ApprovalWhereUniqueInput = {
  readonly id?: string | null;
};

export type ApprovalWhereInput = {
  readonly AND?: TSGQLMaybeArray<ApprovalWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<ApprovalWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<ApprovalWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly code?: StringFilter | null;
  readonly title?: StringFilter | null;
  readonly estimatedBudget?: BigIntNullableFilter | null;
  readonly startDate?: PairFilter | null;
  readonly estimatedEndDate?: PairFilter | null;
  readonly description?: DescriptionManyRelationFilter | null;
  readonly createdAt?: DateTimeNullableFilter | null;
  readonly createdBy?: UserWhereInput | null;
};

export type IDFilter = {
  readonly equals?: string | null;
  readonly in?: TSGQLMaybeArray<string> | null;
  readonly notIn?: TSGQLMaybeArray<string> | null;
  readonly lt?: string | null;
  readonly lte?: string | null;
  readonly gt?: string | null;
  readonly gte?: string | null;
  readonly not?: IDFilter | null;
};

export type StringFilter = {
  readonly equals?: string | null;
  readonly in?: TSGQLMaybeArray<string> | null;
  readonly notIn?: TSGQLMaybeArray<string> | null;
  readonly lt?: string | null;
  readonly lte?: string | null;
  readonly gt?: string | null;
  readonly gte?: string | null;
  readonly contains?: string | null;
  readonly startsWith?: string | null;
  readonly endsWith?: string | null;
  readonly not?: NestedStringFilter | null;
};

export type NestedStringFilter = {
  readonly equals?: string | null;
  readonly in?: TSGQLMaybeArray<string> | null;
  readonly notIn?: TSGQLMaybeArray<string> | null;
  readonly lt?: string | null;
  readonly lte?: string | null;
  readonly gt?: string | null;
  readonly gte?: string | null;
  readonly contains?: string | null;
  readonly startsWith?: string | null;
  readonly endsWith?: string | null;
  readonly not?: NestedStringFilter | null;
};

export type BigIntNullableFilter = {
  readonly equals?: BigInt | null;
  readonly in?: TSGQLMaybeArray<BigInt> | null;
  readonly notIn?: TSGQLMaybeArray<BigInt> | null;
  readonly lt?: BigInt | null;
  readonly lte?: BigInt | null;
  readonly gt?: BigInt | null;
  readonly gte?: BigInt | null;
  readonly not?: BigIntNullableFilter | null;
};

export type PairFilter = {
  readonly equals?: number | null;
  readonly lt?: number | null;
  readonly lte?: number | null;
  readonly gt?: number | null;
  readonly gte?: number | null;
};

export type DescriptionManyRelationFilter = {
  readonly every?: DescriptionWhereInput | null;
  readonly some?: DescriptionWhereInput | null;
  readonly none?: DescriptionWhereInput | null;
};

export type DateTimeNullableFilter = {
  readonly equals?: DateTime | null;
  readonly in?: TSGQLMaybeArray<DateTime> | null;
  readonly notIn?: TSGQLMaybeArray<DateTime> | null;
  readonly lt?: DateTime | null;
  readonly lte?: DateTime | null;
  readonly gt?: DateTime | null;
  readonly gte?: DateTime | null;
  readonly not?: DateTimeNullableFilter | null;
};

export type ApprovalOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly code?: OrderDirection | null;
  readonly title?: OrderDirection | null;
  readonly estimatedBudget?: OrderDirection | null;
  readonly startDate?: OrderDirection | null;
  readonly estimatedEndDate?: OrderDirection | null;
  readonly createdAt?: OrderDirection | null;
};

export type OrderDirection =
  | "asc"
  | "desc";

export type ApprovalUpdateInput = {
  readonly code?: string | null;
  readonly title?: string | null;
  readonly estimatedBudget?: BigInt | null;
  readonly startDate?: number | null;
  readonly estimatedEndDate?: number | null;
  readonly description?: DescriptionRelateToManyForUpdateInput | null;
  readonly createdAt?: DateTime | null;
  readonly createdBy?: UserRelateToOneForUpdateInput | null;
};

export type DescriptionRelateToManyForUpdateInput = {
  readonly disconnect?: TSGQLMaybeArray<DescriptionWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<DescriptionWhereUniqueInput> | null;
  readonly create?: TSGQLMaybeArray<DescriptionCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<DescriptionWhereUniqueInput> | null;
};

export type UserRelateToOneForUpdateInput = {
  readonly create?: UserCreateInput | null;
  readonly connect?: UserWhereUniqueInput | null;
  readonly disconnect?: boolean | null;
};

export type ApprovalUpdateArgs = {
  readonly where: ApprovalWhereUniqueInput;
  readonly data: ApprovalUpdateInput;
};

export type ApprovalCreateInput = {
  readonly code?: string | null;
  readonly title?: string | null;
  readonly estimatedBudget?: BigInt | null;
  readonly startDate?: number | null;
  readonly estimatedEndDate?: number | null;
  readonly description?: DescriptionRelateToManyForCreateInput | null;
  readonly createdAt?: DateTime | null;
  readonly createdBy?: UserRelateToOneForCreateInput | null;
};

export type DescriptionRelateToManyForCreateInput = {
  readonly create?: TSGQLMaybeArray<DescriptionCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<DescriptionWhereUniqueInput> | null;
};

export type UserRelateToOneForCreateInput = {
  readonly create?: UserCreateInput | null;
  readonly connect?: UserWhereUniqueInput | null;
};

export type Description = {
  readonly __typename: "Description";
  readonly id: string;
  readonly subject: string | null;
  readonly title: string | null;
  readonly code: string | null;
  readonly contracts: Contract | null;
  readonly statements: ReadonlyArray<Statement> | null;
  readonly statementsCount: number | null;
  readonly invoices: ReadonlyArray<Invoice> | null;
  readonly invoicesCount: number | null;
  readonly approvals: Approval | null;
  readonly totalStatementsPayable: BigInt | null;
  readonly totalInvoicesPayed: BigInt | null;
  readonly totalPayed: JSON | null;
  readonly createdAt: DateTime | null;
  readonly createdBy: User | null;
};

export type DescriptionstatementsArgs = {
  readonly where?: StatementWhereInput;
  readonly orderBy?: TSGQLMaybeArray<StatementOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: StatementWhereUniqueInput | null;
};

export type DescriptionstatementsCountArgs = {
  readonly where?: StatementWhereInput;
};

export type DescriptioninvoicesArgs = {
  readonly where?: InvoiceWhereInput;
  readonly orderBy?: TSGQLMaybeArray<InvoiceOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: InvoiceWhereUniqueInput | null;
};

export type DescriptioninvoicesCountArgs = {
  readonly where?: InvoiceWhereInput;
};

export type DescriptionWhereUniqueInput = {
  readonly id?: string | null;
};

export type DescriptionWhereInput = {
  readonly AND?: TSGQLMaybeArray<DescriptionWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<DescriptionWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<DescriptionWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly title?: StringFilter | null;
  readonly code?: StringFilter | null;
  readonly contracts?: ContractWhereInput | null;
  readonly statements?: StatementManyRelationFilter | null;
  readonly invoices?: InvoiceManyRelationFilter | null;
  readonly approvals?: ApprovalWhereInput | null;
  readonly createdAt?: DateTimeNullableFilter | null;
  readonly createdBy?: UserWhereInput | null;
};

export type StatementManyRelationFilter = {
  readonly every?: StatementWhereInput | null;
  readonly some?: StatementWhereInput | null;
  readonly none?: StatementWhereInput | null;
};

export type InvoiceManyRelationFilter = {
  readonly every?: InvoiceWhereInput | null;
  readonly some?: InvoiceWhereInput | null;
  readonly none?: InvoiceWhereInput | null;
};

export type DescriptionOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly title?: OrderDirection | null;
  readonly code?: OrderDirection | null;
  readonly createdAt?: OrderDirection | null;
};

export type DescriptionUpdateInput = {
  readonly title?: string | null;
  readonly code?: string | null;
  readonly contracts?: ContractRelateToOneForUpdateInput | null;
  readonly statements?: StatementRelateToManyForUpdateInput | null;
  readonly invoices?: InvoiceRelateToManyForUpdateInput | null;
  readonly approvals?: ApprovalRelateToOneForUpdateInput | null;
  readonly createdAt?: DateTime | null;
  readonly createdBy?: UserRelateToOneForUpdateInput | null;
};

export type ContractRelateToOneForUpdateInput = {
  readonly create?: ContractCreateInput | null;
  readonly connect?: ContractWhereUniqueInput | null;
  readonly disconnect?: boolean | null;
};

export type StatementRelateToManyForUpdateInput = {
  readonly disconnect?: TSGQLMaybeArray<StatementWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<StatementWhereUniqueInput> | null;
  readonly create?: TSGQLMaybeArray<StatementCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<StatementWhereUniqueInput> | null;
};

export type InvoiceRelateToManyForUpdateInput = {
  readonly disconnect?: TSGQLMaybeArray<InvoiceWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<InvoiceWhereUniqueInput> | null;
  readonly create?: TSGQLMaybeArray<InvoiceCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<InvoiceWhereUniqueInput> | null;
};

export type ApprovalRelateToOneForUpdateInput = {
  readonly create?: ApprovalCreateInput | null;
  readonly connect?: ApprovalWhereUniqueInput | null;
  readonly disconnect?: boolean | null;
};

export type DescriptionUpdateArgs = {
  readonly where: DescriptionWhereUniqueInput;
  readonly data: DescriptionUpdateInput;
};

export type DescriptionCreateInput = {
  readonly title?: string | null;
  readonly code?: string | null;
  readonly contracts?: ContractRelateToOneForCreateInput | null;
  readonly statements?: StatementRelateToManyForCreateInput | null;
  readonly invoices?: InvoiceRelateToManyForCreateInput | null;
  readonly approvals?: ApprovalRelateToOneForCreateInput | null;
  readonly createdAt?: DateTime | null;
  readonly createdBy?: UserRelateToOneForCreateInput | null;
};

export type ContractRelateToOneForCreateInput = {
  readonly create?: ContractCreateInput | null;
  readonly connect?: ContractWhereUniqueInput | null;
};

export type StatementRelateToManyForCreateInput = {
  readonly create?: TSGQLMaybeArray<StatementCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<StatementWhereUniqueInput> | null;
};

export type InvoiceRelateToManyForCreateInput = {
  readonly create?: TSGQLMaybeArray<InvoiceCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<InvoiceWhereUniqueInput> | null;
};

export type ApprovalRelateToOneForCreateInput = {
  readonly create?: ApprovalCreateInput | null;
  readonly connect?: ApprovalWhereUniqueInput | null;
};

export type Invoice = {
  readonly __typename: "Invoice";
  readonly id: string;
  readonly title: string | null;
  readonly contractor: Constractor | null;
  readonly description: Description | null;
  readonly dateOfStatement: number | null;
  readonly rows: ReadonlyArray<Row> | null;
  readonly rowsCount: number | null;
  readonly totalPayable: BigInt | null;
  readonly attachments: ReadonlyArray<FileStore> | null;
  readonly attachmentsCount: number | null;
  readonly notes: ReadonlyArray<Note> | null;
  readonly notesCount: number | null;
  readonly createdAt: DateTime | null;
  readonly createdBy: User | null;
  readonly changeLog: JSON | null;
};

export type InvoicerowsArgs = {
  readonly where?: RowWhereInput;
  readonly orderBy?: TSGQLMaybeArray<RowOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: RowWhereUniqueInput | null;
};

export type InvoicerowsCountArgs = {
  readonly where?: RowWhereInput;
};

export type InvoiceattachmentsArgs = {
  readonly where?: FileStoreWhereInput;
  readonly orderBy?: TSGQLMaybeArray<FileStoreOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: FileStoreWhereUniqueInput | null;
};

export type InvoiceattachmentsCountArgs = {
  readonly where?: FileStoreWhereInput;
};

export type InvoicenotesArgs = {
  readonly where?: NoteWhereInput;
  readonly orderBy?: TSGQLMaybeArray<NoteOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: NoteWhereUniqueInput | null;
};

export type InvoicenotesCountArgs = {
  readonly where?: NoteWhereInput;
};

export type InvoiceWhereUniqueInput = {
  readonly id?: string | null;
};

export type InvoiceWhereInput = {
  readonly AND?: TSGQLMaybeArray<InvoiceWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<InvoiceWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<InvoiceWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly title?: StringFilter | null;
  readonly contractor?: ConstractorWhereInput | null;
  readonly description?: DescriptionWhereInput | null;
  readonly dateOfStatement?: PairFilter | null;
  readonly rows?: RowManyRelationFilter | null;
  readonly attachments?: FileStoreManyRelationFilter | null;
  readonly notes?: NoteManyRelationFilter | null;
  readonly createdAt?: DateTimeNullableFilter | null;
  readonly createdBy?: UserWhereInput | null;
};

export type RowManyRelationFilter = {
  readonly every?: RowWhereInput | null;
  readonly some?: RowWhereInput | null;
  readonly none?: RowWhereInput | null;
};

export type FileStoreManyRelationFilter = {
  readonly every?: FileStoreWhereInput | null;
  readonly some?: FileStoreWhereInput | null;
  readonly none?: FileStoreWhereInput | null;
};

export type NoteManyRelationFilter = {
  readonly every?: NoteWhereInput | null;
  readonly some?: NoteWhereInput | null;
  readonly none?: NoteWhereInput | null;
};

export type InvoiceOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly title?: OrderDirection | null;
  readonly dateOfStatement?: OrderDirection | null;
  readonly createdAt?: OrderDirection | null;
};

export type InvoiceUpdateInput = {
  readonly title?: string | null;
  readonly contractor?: ConstractorRelateToOneForUpdateInput | null;
  readonly description?: DescriptionRelateToOneForUpdateInput | null;
  readonly dateOfStatement?: number | null;
  readonly rows?: RowRelateToManyForUpdateInput | null;
  readonly attachments?: FileStoreRelateToManyForUpdateInput | null;
  readonly notes?: NoteRelateToManyForUpdateInput | null;
  readonly createdAt?: DateTime | null;
  readonly createdBy?: UserRelateToOneForUpdateInput | null;
  readonly changeLog?: JSON | null;
};

export type ConstractorRelateToOneForUpdateInput = {
  readonly create?: ConstractorCreateInput | null;
  readonly connect?: ConstractorWhereUniqueInput | null;
  readonly disconnect?: boolean | null;
};

export type DescriptionRelateToOneForUpdateInput = {
  readonly create?: DescriptionCreateInput | null;
  readonly connect?: DescriptionWhereUniqueInput | null;
  readonly disconnect?: boolean | null;
};

export type RowRelateToManyForUpdateInput = {
  readonly disconnect?: TSGQLMaybeArray<RowWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<RowWhereUniqueInput> | null;
  readonly create?: TSGQLMaybeArray<RowCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<RowWhereUniqueInput> | null;
};

export type FileStoreRelateToManyForUpdateInput = {
  readonly disconnect?: TSGQLMaybeArray<FileStoreWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<FileStoreWhereUniqueInput> | null;
  readonly create?: TSGQLMaybeArray<FileStoreCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<FileStoreWhereUniqueInput> | null;
};

export type NoteRelateToManyForUpdateInput = {
  readonly disconnect?: TSGQLMaybeArray<NoteWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<NoteWhereUniqueInput> | null;
  readonly create?: TSGQLMaybeArray<NoteCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<NoteWhereUniqueInput> | null;
};

export type InvoiceUpdateArgs = {
  readonly where: InvoiceWhereUniqueInput;
  readonly data: InvoiceUpdateInput;
};

export type InvoiceCreateInput = {
  readonly title?: string | null;
  readonly contractor?: ConstractorRelateToOneForCreateInput | null;
  readonly description?: DescriptionRelateToOneForCreateInput | null;
  readonly dateOfStatement?: number | null;
  readonly rows?: RowRelateToManyForCreateInput | null;
  readonly attachments?: FileStoreRelateToManyForCreateInput | null;
  readonly notes?: NoteRelateToManyForCreateInput | null;
  readonly createdAt?: DateTime | null;
  readonly createdBy?: UserRelateToOneForCreateInput | null;
  readonly changeLog?: JSON | null;
};

export type ConstractorRelateToOneForCreateInput = {
  readonly create?: ConstractorCreateInput | null;
  readonly connect?: ConstractorWhereUniqueInput | null;
};

export type DescriptionRelateToOneForCreateInput = {
  readonly create?: DescriptionCreateInput | null;
  readonly connect?: DescriptionWhereUniqueInput | null;
};

export type RowRelateToManyForCreateInput = {
  readonly create?: TSGQLMaybeArray<RowCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<RowWhereUniqueInput> | null;
};

export type FileStoreRelateToManyForCreateInput = {
  readonly create?: TSGQLMaybeArray<FileStoreCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<FileStoreWhereUniqueInput> | null;
};

export type NoteRelateToManyForCreateInput = {
  readonly create?: TSGQLMaybeArray<NoteCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<NoteWhereUniqueInput> | null;
};

export type Row = {
  readonly __typename: "Row";
  readonly id: string;
  readonly commodity: Category | null;
  readonly description: string | null;
  readonly unit: string | null;
  readonly unitPrice: number | null;
  readonly quantity: number | null;
  readonly percentageOfWorkDone: number | null;
  readonly tax: BigInt | null;
  readonly total: BigInt | null;
  readonly invoice: Invoice | null;
  readonly statement: Statement | null;
  readonly contract: Contract | null;
};

export type RowWhereUniqueInput = {
  readonly id?: string | null;
};

export type RowWhereInput = {
  readonly AND?: TSGQLMaybeArray<RowWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<RowWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<RowWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly commodity?: CategoryWhereInput | null;
  readonly description?: StringFilter | null;
  readonly unit?: StringNullableFilter | null;
  readonly unitPrice?: IntFilter | null;
  readonly quantity?: FloatFilter | null;
  readonly percentageOfWorkDone?: IntNullableFilter | null;
  readonly tax?: BigIntNullableFilter | null;
  readonly invoice?: InvoiceWhereInput | null;
  readonly statement?: StatementWhereInput | null;
  readonly contract?: ContractWhereInput | null;
};

export type StringNullableFilter = {
  readonly equals?: string | null;
  readonly in?: TSGQLMaybeArray<string> | null;
  readonly notIn?: TSGQLMaybeArray<string> | null;
  readonly lt?: string | null;
  readonly lte?: string | null;
  readonly gt?: string | null;
  readonly gte?: string | null;
  readonly contains?: string | null;
  readonly startsWith?: string | null;
  readonly endsWith?: string | null;
  readonly not?: StringNullableFilter | null;
};

export type IntFilter = {
  readonly equals?: number | null;
  readonly in?: TSGQLMaybeArray<number> | null;
  readonly notIn?: TSGQLMaybeArray<number> | null;
  readonly lt?: number | null;
  readonly lte?: number | null;
  readonly gt?: number | null;
  readonly gte?: number | null;
  readonly not?: IntFilter | null;
};

export type FloatFilter = {
  readonly equals?: number | null;
  readonly in?: TSGQLMaybeArray<number> | null;
  readonly notIn?: TSGQLMaybeArray<number> | null;
  readonly lt?: number | null;
  readonly lte?: number | null;
  readonly gt?: number | null;
  readonly gte?: number | null;
  readonly not?: FloatFilter | null;
};

export type IntNullableFilter = {
  readonly equals?: number | null;
  readonly in?: TSGQLMaybeArray<number> | null;
  readonly notIn?: TSGQLMaybeArray<number> | null;
  readonly lt?: number | null;
  readonly lte?: number | null;
  readonly gt?: number | null;
  readonly gte?: number | null;
  readonly not?: IntNullableFilter | null;
};

export type RowOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly description?: OrderDirection | null;
  readonly unit?: OrderDirection | null;
  readonly unitPrice?: OrderDirection | null;
  readonly quantity?: OrderDirection | null;
  readonly percentageOfWorkDone?: OrderDirection | null;
  readonly tax?: OrderDirection | null;
};

export type RowUpdateInput = {
  readonly commodity?: CategoryRelateToOneForUpdateInput | null;
  readonly description?: string | null;
  readonly unit?: string | null;
  readonly unitPrice?: number | null;
  readonly quantity?: number | null;
  readonly percentageOfWorkDone?: number | null;
  readonly tax?: BigInt | null;
  readonly invoice?: InvoiceRelateToOneForUpdateInput | null;
  readonly statement?: StatementRelateToOneForUpdateInput | null;
  readonly contract?: ContractRelateToOneForUpdateInput | null;
};

export type CategoryRelateToOneForUpdateInput = {
  readonly create?: CategoryCreateInput | null;
  readonly connect?: CategoryWhereUniqueInput | null;
  readonly disconnect?: boolean | null;
};

export type InvoiceRelateToOneForUpdateInput = {
  readonly create?: InvoiceCreateInput | null;
  readonly connect?: InvoiceWhereUniqueInput | null;
  readonly disconnect?: boolean | null;
};

export type StatementRelateToOneForUpdateInput = {
  readonly create?: StatementCreateInput | null;
  readonly connect?: StatementWhereUniqueInput | null;
  readonly disconnect?: boolean | null;
};

export type RowUpdateArgs = {
  readonly where: RowWhereUniqueInput;
  readonly data: RowUpdateInput;
};

export type RowCreateInput = {
  readonly commodity?: CategoryRelateToOneForCreateInput | null;
  readonly description?: string | null;
  readonly unit?: string | null;
  readonly unitPrice?: number | null;
  readonly quantity?: number | null;
  readonly percentageOfWorkDone?: number | null;
  readonly tax?: BigInt | null;
  readonly invoice?: InvoiceRelateToOneForCreateInput | null;
  readonly statement?: StatementRelateToOneForCreateInput | null;
  readonly contract?: ContractRelateToOneForCreateInput | null;
};

export type CategoryRelateToOneForCreateInput = {
  readonly create?: CategoryCreateInput | null;
  readonly connect?: CategoryWhereUniqueInput | null;
};

export type InvoiceRelateToOneForCreateInput = {
  readonly create?: InvoiceCreateInput | null;
  readonly connect?: InvoiceWhereUniqueInput | null;
};

export type StatementRelateToOneForCreateInput = {
  readonly create?: StatementCreateInput | null;
  readonly connect?: StatementWhereUniqueInput | null;
};

export type Contract = {
  readonly __typename: "Contract";
  readonly id: string;
  readonly summery: string | null;
  readonly isApproved: boolean | null;
  readonly approvedBy: User | null;
  readonly title: string | null;
  readonly description: string | null;
  readonly startFrom: number | null;
  readonly end: number | null;
  readonly rows: ReadonlyArray<Row> | null;
  readonly rowsCount: number | null;
  readonly cost: BigInt | null;
  readonly statementDescription: Description | null;
  readonly attachments: ReadonlyArray<FileStore> | null;
  readonly attachmentsCount: number | null;
  readonly contractor: Constractor | null;
  readonly statements: ReadonlyArray<Statement> | null;
  readonly statementsCount: number | null;
  readonly attachment: FileFieldOutput | null;
  readonly createdAt: DateTime | null;
  readonly createdBy: User | null;
  readonly contractSample: JSON | null;
  readonly changeLog: JSON | null;
};

export type ContractrowsArgs = {
  readonly where?: RowWhereInput;
  readonly orderBy?: TSGQLMaybeArray<RowOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: RowWhereUniqueInput | null;
};

export type ContractrowsCountArgs = {
  readonly where?: RowWhereInput;
};

export type ContractattachmentsArgs = {
  readonly where?: FileStoreWhereInput;
  readonly orderBy?: TSGQLMaybeArray<FileStoreOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: FileStoreWhereUniqueInput | null;
};

export type ContractattachmentsCountArgs = {
  readonly where?: FileStoreWhereInput;
};

export type ContractstatementsArgs = {
  readonly where?: StatementWhereInput;
  readonly orderBy?: TSGQLMaybeArray<StatementOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: StatementWhereUniqueInput | null;
};

export type ContractstatementsCountArgs = {
  readonly where?: StatementWhereInput;
};

export type FileFieldOutput = {
  readonly __typename: "FileFieldOutput";
  readonly filename: string;
  readonly filesize: number;
  readonly url: string;
};

export type ContractWhereUniqueInput = {
  readonly id?: string | null;
};

export type ContractWhereInput = {
  readonly AND?: TSGQLMaybeArray<ContractWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<ContractWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<ContractWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly isApproved?: BooleanFilter | null;
  readonly approvedBy?: UserWhereInput | null;
  readonly title?: StringFilter | null;
  readonly description?: StringFilter | null;
  readonly startFrom?: PairFilter | null;
  readonly end?: PairFilter | null;
  readonly rows?: RowManyRelationFilter | null;
  readonly cost?: BigIntNullableFilter | null;
  readonly statementDescription?: DescriptionWhereInput | null;
  readonly attachments?: FileStoreManyRelationFilter | null;
  readonly contractor?: ConstractorWhereInput | null;
  readonly statements?: StatementManyRelationFilter | null;
  readonly createdAt?: DateTimeNullableFilter | null;
  readonly createdBy?: UserWhereInput | null;
};

export type BooleanFilter = {
  readonly equals?: boolean | null;
  readonly not?: BooleanFilter | null;
};

export type ContractOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly isApproved?: OrderDirection | null;
  readonly title?: OrderDirection | null;
  readonly description?: OrderDirection | null;
  readonly startFrom?: OrderDirection | null;
  readonly end?: OrderDirection | null;
  readonly cost?: OrderDirection | null;
  readonly createdAt?: OrderDirection | null;
};

export type ContractUpdateInput = {
  readonly isApproved?: boolean | null;
  readonly approvedBy?: UserRelateToOneForUpdateInput | null;
  readonly title?: string | null;
  readonly description?: string | null;
  readonly startFrom?: number | null;
  readonly end?: number | null;
  readonly rows?: RowRelateToManyForUpdateInput | null;
  readonly cost?: BigInt | null;
  readonly statementDescription?: DescriptionRelateToOneForUpdateInput | null;
  readonly attachments?: FileStoreRelateToManyForUpdateInput | null;
  readonly contractor?: ConstractorRelateToOneForUpdateInput | null;
  readonly statements?: StatementRelateToManyForUpdateInput | null;
  readonly attachment?: FileFieldInput | null;
  readonly createdAt?: DateTime | null;
  readonly createdBy?: UserRelateToOneForUpdateInput | null;
  readonly changeLog?: JSON | null;
};

export type FileFieldInput = {
  readonly upload: Upload;
};

export type Upload = any;

export type ContractUpdateArgs = {
  readonly where: ContractWhereUniqueInput;
  readonly data: ContractUpdateInput;
};

export type ContractCreateInput = {
  readonly isApproved?: boolean | null;
  readonly approvedBy?: UserRelateToOneForCreateInput | null;
  readonly title?: string | null;
  readonly description?: string | null;
  readonly startFrom?: number | null;
  readonly end?: number | null;
  readonly rows?: RowRelateToManyForCreateInput | null;
  readonly cost?: BigInt | null;
  readonly statementDescription?: DescriptionRelateToOneForCreateInput | null;
  readonly attachments?: FileStoreRelateToManyForCreateInput | null;
  readonly contractor?: ConstractorRelateToOneForCreateInput | null;
  readonly statements?: StatementRelateToManyForCreateInput | null;
  readonly attachment?: FileFieldInput | null;
  readonly createdAt?: DateTime | null;
  readonly createdBy?: UserRelateToOneForCreateInput | null;
  readonly changeLog?: JSON | null;
};

export type Statement = {
  readonly __typename: "Statement";
  readonly id: string;
  readonly statementConfirmationStatus: JSON | null;
  readonly confirmedByTheUploader: boolean | null;
  readonly confirmedByFinancialSupervisor: boolean | null;
  readonly confirmedByProjectControlSupervisor: boolean | null;
  readonly confirmedBySupervisor: boolean | null;
  readonly type: string | null;
  readonly title: string | null;
  readonly statementNumber: number | null;
  readonly contract: Contract | null;
  readonly description: Description | null;
  readonly sateOfStatement: number | null;
  readonly attachments: ReadonlyArray<FileStore> | null;
  readonly attachmentsCount: number | null;
  readonly peyments: ReadonlyArray<Payment> | null;
  readonly peymentsCount: number | null;
  readonly rows: ReadonlyArray<Row> | null;
  readonly rowsCount: number | null;
  readonly grossTotal: BigInt | null;
  readonly deductionOnAccountOfAdvancePayment: BigInt | null;
  readonly workGuarantee: BigInt | null;
  readonly totalPayable: BigInt | null;
  readonly notes: ReadonlyArray<Note> | null;
  readonly notesCount: number | null;
  readonly status: string | null;
  readonly createdAt: DateTime | null;
  readonly changeLog: JSON | null;
};

export type StatementattachmentsArgs = {
  readonly where?: FileStoreWhereInput;
  readonly orderBy?: TSGQLMaybeArray<FileStoreOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: FileStoreWhereUniqueInput | null;
};

export type StatementattachmentsCountArgs = {
  readonly where?: FileStoreWhereInput;
};

export type StatementpeymentsArgs = {
  readonly where?: PaymentWhereInput;
  readonly orderBy?: TSGQLMaybeArray<PaymentOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: PaymentWhereUniqueInput | null;
};

export type StatementpeymentsCountArgs = {
  readonly where?: PaymentWhereInput;
};

export type StatementrowsArgs = {
  readonly where?: RowWhereInput;
  readonly orderBy?: TSGQLMaybeArray<RowOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: RowWhereUniqueInput | null;
};

export type StatementrowsCountArgs = {
  readonly where?: RowWhereInput;
};

export type StatementnotesArgs = {
  readonly where?: NoteWhereInput;
  readonly orderBy?: TSGQLMaybeArray<NoteOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: NoteWhereUniqueInput | null;
};

export type StatementnotesCountArgs = {
  readonly where?: NoteWhereInput;
};

export type StatementWhereUniqueInput = {
  readonly id?: string | null;
};

export type StatementWhereInput = {
  readonly AND?: TSGQLMaybeArray<StatementWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<StatementWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<StatementWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly confirmedByTheUploader?: BooleanFilter | null;
  readonly confirmedByFinancialSupervisor?: BooleanFilter | null;
  readonly confirmedByProjectControlSupervisor?: BooleanFilter | null;
  readonly confirmedBySupervisor?: BooleanFilter | null;
  readonly type?: StringNullableFilter | null;
  readonly title?: StringFilter | null;
  readonly statementNumber?: IntNullableFilter | null;
  readonly contract?: ContractWhereInput | null;
  readonly description?: DescriptionWhereInput | null;
  readonly sateOfStatement?: PairFilter | null;
  readonly attachments?: FileStoreManyRelationFilter | null;
  readonly peyments?: PaymentManyRelationFilter | null;
  readonly rows?: RowManyRelationFilter | null;
  readonly deductionOnAccountOfAdvancePayment?: BigIntNullableFilter | null;
  readonly workGuarantee?: BigIntNullableFilter | null;
  readonly notes?: NoteManyRelationFilter | null;
  readonly status?: StringNullableFilter | null;
  readonly createdAt?: DateTimeNullableFilter | null;
};

export type PaymentManyRelationFilter = {
  readonly every?: PaymentWhereInput | null;
  readonly some?: PaymentWhereInput | null;
  readonly none?: PaymentWhereInput | null;
};

export type StatementOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly confirmedByTheUploader?: OrderDirection | null;
  readonly confirmedByFinancialSupervisor?: OrderDirection | null;
  readonly confirmedByProjectControlSupervisor?: OrderDirection | null;
  readonly confirmedBySupervisor?: OrderDirection | null;
  readonly type?: OrderDirection | null;
  readonly title?: OrderDirection | null;
  readonly statementNumber?: OrderDirection | null;
  readonly sateOfStatement?: OrderDirection | null;
  readonly deductionOnAccountOfAdvancePayment?: OrderDirection | null;
  readonly workGuarantee?: OrderDirection | null;
  readonly status?: OrderDirection | null;
  readonly createdAt?: OrderDirection | null;
};

export type StatementUpdateInput = {
  readonly confirmedByTheUploader?: boolean | null;
  readonly confirmedByFinancialSupervisor?: boolean | null;
  readonly confirmedByProjectControlSupervisor?: boolean | null;
  readonly confirmedBySupervisor?: boolean | null;
  readonly type?: string | null;
  readonly title?: string | null;
  readonly statementNumber?: number | null;
  readonly contract?: ContractRelateToOneForUpdateInput | null;
  readonly description?: DescriptionRelateToOneForUpdateInput | null;
  readonly sateOfStatement?: number | null;
  readonly attachments?: FileStoreRelateToManyForUpdateInput | null;
  readonly peyments?: PaymentRelateToManyForUpdateInput | null;
  readonly rows?: RowRelateToManyForUpdateInput | null;
  readonly deductionOnAccountOfAdvancePayment?: BigInt | null;
  readonly workGuarantee?: BigInt | null;
  readonly notes?: NoteRelateToManyForUpdateInput | null;
  readonly status?: string | null;
  readonly createdAt?: DateTime | null;
  readonly changeLog?: JSON | null;
};

export type PaymentRelateToManyForUpdateInput = {
  readonly disconnect?: TSGQLMaybeArray<PaymentWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<PaymentWhereUniqueInput> | null;
  readonly create?: TSGQLMaybeArray<PaymentCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<PaymentWhereUniqueInput> | null;
};

export type StatementUpdateArgs = {
  readonly where: StatementWhereUniqueInput;
  readonly data: StatementUpdateInput;
};

export type StatementCreateInput = {
  readonly confirmedByTheUploader?: boolean | null;
  readonly confirmedByFinancialSupervisor?: boolean | null;
  readonly confirmedByProjectControlSupervisor?: boolean | null;
  readonly confirmedBySupervisor?: boolean | null;
  readonly type?: string | null;
  readonly title?: string | null;
  readonly statementNumber?: number | null;
  readonly contract?: ContractRelateToOneForCreateInput | null;
  readonly description?: DescriptionRelateToOneForCreateInput | null;
  readonly sateOfStatement?: number | null;
  readonly attachments?: FileStoreRelateToManyForCreateInput | null;
  readonly peyments?: PaymentRelateToManyForCreateInput | null;
  readonly rows?: RowRelateToManyForCreateInput | null;
  readonly deductionOnAccountOfAdvancePayment?: BigInt | null;
  readonly workGuarantee?: BigInt | null;
  readonly notes?: NoteRelateToManyForCreateInput | null;
  readonly status?: string | null;
  readonly createdAt?: DateTime | null;
  readonly changeLog?: JSON | null;
};

export type PaymentRelateToManyForCreateInput = {
  readonly create?: TSGQLMaybeArray<PaymentCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<PaymentWhereUniqueInput> | null;
};

export type StatementItem = {
  readonly __typename: "StatementItem";
  readonly id: string;
  readonly description: string | null;
  readonly unit: string | null;
  readonly unitPrice: number | null;
  readonly quantity: number | null;
  readonly percentageOfWorkDone: number | null;
  readonly total: BigInt | null;
};

export type StatementItemWhereUniqueInput = {
  readonly id?: string | null;
};

export type StatementItemWhereInput = {
  readonly AND?: TSGQLMaybeArray<StatementItemWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<StatementItemWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<StatementItemWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly description?: StringFilter | null;
  readonly unit?: StringNullableFilter | null;
  readonly unitPrice?: IntFilter | null;
  readonly quantity?: FloatFilter | null;
  readonly percentageOfWorkDone?: IntNullableFilter | null;
};

export type StatementItemOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly description?: OrderDirection | null;
  readonly unit?: OrderDirection | null;
  readonly unitPrice?: OrderDirection | null;
  readonly quantity?: OrderDirection | null;
  readonly percentageOfWorkDone?: OrderDirection | null;
};

export type StatementItemUpdateInput = {
  readonly description?: string | null;
  readonly unit?: string | null;
  readonly unitPrice?: number | null;
  readonly quantity?: number | null;
  readonly percentageOfWorkDone?: number | null;
};

export type StatementItemUpdateArgs = {
  readonly where: StatementItemWhereUniqueInput;
  readonly data: StatementItemUpdateInput;
};

export type StatementItemCreateInput = {
  readonly description?: string | null;
  readonly unit?: string | null;
  readonly unitPrice?: number | null;
  readonly quantity?: number | null;
  readonly percentageOfWorkDone?: number | null;
};

export type Payment = {
  readonly __typename: "Payment";
  readonly id: string;
  readonly title: string | null;
  readonly dateOfPayment: number | null;
  readonly statement: Statement | null;
  readonly description: string | null;
  readonly price: BigInt | null;
  readonly attachment: ImageFieldOutput | null;
};

export type ImageFieldOutput = {
  readonly __typename: "ImageFieldOutput";
  readonly id: string;
  readonly filesize: number;
  readonly width: number;
  readonly height: number;
  readonly extension: ImageExtension;
  readonly url: string;
};

export type ImageExtension =
  | "jpg"
  | "png"
  | "webp"
  | "gif";

export type PaymentWhereUniqueInput = {
  readonly id?: string | null;
};

export type PaymentWhereInput = {
  readonly AND?: TSGQLMaybeArray<PaymentWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<PaymentWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<PaymentWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly title?: StringFilter | null;
  readonly dateOfPayment?: PairFilter | null;
  readonly statement?: StatementWhereInput | null;
  readonly description?: StringFilter | null;
  readonly price?: BigIntNullableFilter | null;
};

export type PaymentOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly title?: OrderDirection | null;
  readonly dateOfPayment?: OrderDirection | null;
  readonly description?: OrderDirection | null;
  readonly price?: OrderDirection | null;
};

export type PaymentUpdateInput = {
  readonly title?: string | null;
  readonly dateOfPayment?: number | null;
  readonly statement?: StatementRelateToOneForUpdateInput | null;
  readonly description?: string | null;
  readonly price?: BigInt | null;
  readonly attachment?: ImageFieldInput | null;
};

export type ImageFieldInput = {
  readonly upload: Upload;
};

export type PaymentUpdateArgs = {
  readonly where: PaymentWhereUniqueInput;
  readonly data: PaymentUpdateInput;
};

export type PaymentCreateInput = {
  readonly title?: string | null;
  readonly dateOfPayment?: number | null;
  readonly statement?: StatementRelateToOneForCreateInput | null;
  readonly description?: string | null;
  readonly price?: BigInt | null;
  readonly attachment?: ImageFieldInput | null;
};

export type ImageStore = {
  readonly __typename: "ImageStore";
  readonly id: string;
  readonly url: string | null;
  readonly image: ImageFieldOutput | null;
  readonly altText: string | null;
  readonly createdAt: DateTime | null;
};

export type ImageStoreWhereUniqueInput = {
  readonly id?: string | null;
};

export type ImageStoreWhereInput = {
  readonly AND?: TSGQLMaybeArray<ImageStoreWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<ImageStoreWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<ImageStoreWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly altText?: StringFilter | null;
  readonly createdAt?: DateTimeNullableFilter | null;
};

export type ImageStoreOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly altText?: OrderDirection | null;
  readonly createdAt?: OrderDirection | null;
};

export type ImageStoreUpdateInput = {
  readonly image?: ImageFieldInput | null;
  readonly altText?: string | null;
  readonly createdAt?: DateTime | null;
};

export type ImageStoreUpdateArgs = {
  readonly where: ImageStoreWhereUniqueInput;
  readonly data: ImageStoreUpdateInput;
};

export type ImageStoreCreateInput = {
  readonly image?: ImageFieldInput | null;
  readonly altText?: string | null;
  readonly createdAt?: DateTime | null;
};

export type Constractor = {
  readonly __typename: "Constractor";
  readonly id: string;
  readonly name: string | null;
  readonly type: string | null;
  readonly contracts: ReadonlyArray<Contract> | null;
  readonly contractsCount: number | null;
  readonly invoices: ReadonlyArray<Invoice> | null;
  readonly invoicesCount: number | null;
};

export type ConstractorcontractsArgs = {
  readonly where?: ContractWhereInput;
  readonly orderBy?: TSGQLMaybeArray<ContractOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: ContractWhereUniqueInput | null;
};

export type ConstractorcontractsCountArgs = {
  readonly where?: ContractWhereInput;
};

export type ConstractorinvoicesArgs = {
  readonly where?: InvoiceWhereInput;
  readonly orderBy?: TSGQLMaybeArray<InvoiceOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: InvoiceWhereUniqueInput | null;
};

export type ConstractorinvoicesCountArgs = {
  readonly where?: InvoiceWhereInput;
};

export type ConstractorWhereUniqueInput = {
  readonly id?: string | null;
};

export type ConstractorWhereInput = {
  readonly AND?: TSGQLMaybeArray<ConstractorWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<ConstractorWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<ConstractorWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly name?: StringFilter | null;
  readonly type?: StringNullableFilter | null;
  readonly contracts?: ContractManyRelationFilter | null;
  readonly invoices?: InvoiceManyRelationFilter | null;
};

export type ContractManyRelationFilter = {
  readonly every?: ContractWhereInput | null;
  readonly some?: ContractWhereInput | null;
  readonly none?: ContractWhereInput | null;
};

export type ConstractorOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly name?: OrderDirection | null;
  readonly type?: OrderDirection | null;
};

export type ConstractorUpdateInput = {
  readonly name?: string | null;
  readonly type?: string | null;
  readonly contracts?: ContractRelateToManyForUpdateInput | null;
  readonly invoices?: InvoiceRelateToManyForUpdateInput | null;
};

export type ContractRelateToManyForUpdateInput = {
  readonly disconnect?: TSGQLMaybeArray<ContractWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<ContractWhereUniqueInput> | null;
  readonly create?: TSGQLMaybeArray<ContractCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<ContractWhereUniqueInput> | null;
};

export type ConstractorUpdateArgs = {
  readonly where: ConstractorWhereUniqueInput;
  readonly data: ConstractorUpdateInput;
};

export type ConstractorCreateInput = {
  readonly name?: string | null;
  readonly type?: string | null;
  readonly contracts?: ContractRelateToManyForCreateInput | null;
  readonly invoices?: InvoiceRelateToManyForCreateInput | null;
};

export type ContractRelateToManyForCreateInput = {
  readonly create?: TSGQLMaybeArray<ContractCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<ContractWhereUniqueInput> | null;
};

export type FileStore = {
  readonly __typename: "FileStore";
  readonly id: string;
  readonly title: string | null;
  readonly file: FileFieldOutput | null;
  readonly type: string | null;
  readonly statement: Statement | null;
  readonly invoice: Invoice | null;
  readonly contract: Contract | null;
  readonly createdAt: DateTime | null;
  readonly createdBy: User | null;
};

export type FileStoreWhereUniqueInput = {
  readonly id?: string | null;
};

export type FileStoreWhereInput = {
  readonly AND?: TSGQLMaybeArray<FileStoreWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<FileStoreWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<FileStoreWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly title?: StringFilter | null;
  readonly type?: StringNullableFilter | null;
  readonly statement?: StatementWhereInput | null;
  readonly invoice?: InvoiceWhereInput | null;
  readonly contract?: ContractWhereInput | null;
  readonly createdAt?: DateTimeNullableFilter | null;
  readonly createdBy?: UserWhereInput | null;
};

export type FileStoreOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly title?: OrderDirection | null;
  readonly type?: OrderDirection | null;
  readonly createdAt?: OrderDirection | null;
};

export type FileStoreUpdateInput = {
  readonly title?: string | null;
  readonly file?: FileFieldInput | null;
  readonly type?: string | null;
  readonly statement?: StatementRelateToOneForUpdateInput | null;
  readonly invoice?: InvoiceRelateToOneForUpdateInput | null;
  readonly contract?: ContractRelateToOneForUpdateInput | null;
  readonly createdAt?: DateTime | null;
  readonly createdBy?: UserRelateToOneForUpdateInput | null;
};

export type FileStoreUpdateArgs = {
  readonly where: FileStoreWhereUniqueInput;
  readonly data: FileStoreUpdateInput;
};

export type FileStoreCreateInput = {
  readonly title?: string | null;
  readonly file?: FileFieldInput | null;
  readonly type?: string | null;
  readonly statement?: StatementRelateToOneForCreateInput | null;
  readonly invoice?: InvoiceRelateToOneForCreateInput | null;
  readonly contract?: ContractRelateToOneForCreateInput | null;
  readonly createdAt?: DateTime | null;
  readonly createdBy?: UserRelateToOneForCreateInput | null;
};

export type Design = {
  readonly __typename: "Design";
  readonly id: string;
  readonly title: string | null;
  readonly design: FileStore | null;
  readonly category: Category | null;
  readonly tags: ReadonlyArray<Tag> | null;
  readonly tagsCount: number | null;
  readonly createdAt: DateTime | null;
  readonly createdBy: User | null;
};

export type DesigntagsArgs = {
  readonly where?: TagWhereInput;
  readonly orderBy?: TSGQLMaybeArray<TagOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: TagWhereUniqueInput | null;
};

export type DesigntagsCountArgs = {
  readonly where?: TagWhereInput;
};

export type DesignWhereUniqueInput = {
  readonly id?: string | null;
};

export type DesignWhereInput = {
  readonly AND?: TSGQLMaybeArray<DesignWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<DesignWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<DesignWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly title?: StringFilter | null;
  readonly design?: FileStoreWhereInput | null;
  readonly category?: CategoryWhereInput | null;
  readonly tags?: TagManyRelationFilter | null;
  readonly createdAt?: DateTimeNullableFilter | null;
  readonly createdBy?: UserWhereInput | null;
};

export type TagManyRelationFilter = {
  readonly every?: TagWhereInput | null;
  readonly some?: TagWhereInput | null;
  readonly none?: TagWhereInput | null;
};

export type DesignOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly title?: OrderDirection | null;
  readonly createdAt?: OrderDirection | null;
};

export type DesignUpdateInput = {
  readonly title?: string | null;
  readonly design?: FileStoreRelateToOneForUpdateInput | null;
  readonly category?: CategoryRelateToOneForUpdateInput | null;
  readonly tags?: TagRelateToManyForUpdateInput | null;
  readonly createdAt?: DateTime | null;
  readonly createdBy?: UserRelateToOneForUpdateInput | null;
};

export type FileStoreRelateToOneForUpdateInput = {
  readonly create?: FileStoreCreateInput | null;
  readonly connect?: FileStoreWhereUniqueInput | null;
  readonly disconnect?: boolean | null;
};

export type TagRelateToManyForUpdateInput = {
  readonly disconnect?: TSGQLMaybeArray<TagWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<TagWhereUniqueInput> | null;
  readonly create?: TSGQLMaybeArray<TagCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<TagWhereUniqueInput> | null;
};

export type DesignUpdateArgs = {
  readonly where: DesignWhereUniqueInput;
  readonly data: DesignUpdateInput;
};

export type DesignCreateInput = {
  readonly title?: string | null;
  readonly design?: FileStoreRelateToOneForCreateInput | null;
  readonly category?: CategoryRelateToOneForCreateInput | null;
  readonly tags?: TagRelateToManyForCreateInput | null;
  readonly createdAt?: DateTime | null;
  readonly createdBy?: UserRelateToOneForCreateInput | null;
};

export type FileStoreRelateToOneForCreateInput = {
  readonly create?: FileStoreCreateInput | null;
  readonly connect?: FileStoreWhereUniqueInput | null;
};

export type TagRelateToManyForCreateInput = {
  readonly create?: TSGQLMaybeArray<TagCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<TagWhereUniqueInput> | null;
};

export type DailyReport = {
  readonly __typename: "DailyReport";
  readonly id: string;
  readonly date: DateTime | null;
  readonly document: FileFieldOutput | null;
  readonly createdBy: User | null;
};

export type DailyReportWhereUniqueInput = {
  readonly id?: string | null;
};

export type DailyReportWhereInput = {
  readonly AND?: TSGQLMaybeArray<DailyReportWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<DailyReportWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<DailyReportWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly date?: DateTimeNullableFilter | null;
  readonly createdBy?: UserWhereInput | null;
};

export type DailyReportOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly date?: OrderDirection | null;
};

export type DailyReportUpdateInput = {
  readonly date?: DateTime | null;
  readonly document?: FileFieldInput | null;
  readonly createdBy?: UserRelateToOneForUpdateInput | null;
};

export type DailyReportUpdateArgs = {
  readonly where: DailyReportWhereUniqueInput;
  readonly data: DailyReportUpdateInput;
};

export type DailyReportCreateInput = {
  readonly date?: DateTime | null;
  readonly document?: FileFieldInput | null;
  readonly createdBy?: UserRelateToOneForCreateInput | null;
};

export type SafetyReport = {
  readonly __typename: "SafetyReport";
  readonly id: string;
  readonly date: DateTime | null;
  readonly document: FileFieldOutput | null;
  readonly updatedBy: User | null;
};

export type SafetyReportWhereUniqueInput = {
  readonly id?: string | null;
};

export type SafetyReportWhereInput = {
  readonly AND?: TSGQLMaybeArray<SafetyReportWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<SafetyReportWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<SafetyReportWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly date?: DateTimeNullableFilter | null;
  readonly updatedBy?: UserWhereInput | null;
};

export type SafetyReportOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly date?: OrderDirection | null;
};

export type SafetyReportUpdateInput = {
  readonly date?: DateTime | null;
  readonly document?: FileFieldInput | null;
  readonly updatedBy?: UserRelateToOneForUpdateInput | null;
};

export type SafetyReportUpdateArgs = {
  readonly where: SafetyReportWhereUniqueInput;
  readonly data: SafetyReportUpdateInput;
};

export type SafetyReportCreateInput = {
  readonly date?: DateTime | null;
  readonly document?: FileFieldInput | null;
  readonly updatedBy?: UserRelateToOneForCreateInput | null;
};

export type User = {
  readonly __typename: "User";
  readonly id: string;
  readonly fullname: string | null;
  readonly name: string | null;
  readonly email: string | null;
  readonly avatar: ImageFieldOutput | null;
  readonly role: number | null;
  readonly password: PasswordState | null;
  readonly approvals: ReadonlyArray<Approval> | null;
  readonly approvalsCount: number | null;
  readonly descriptions: ReadonlyArray<Description> | null;
  readonly descriptionsCount: number | null;
  readonly approvedContracts: ReadonlyArray<Contract> | null;
  readonly approvedContractsCount: number | null;
  readonly contracts: ReadonlyArray<Contract> | null;
  readonly contractsCount: number | null;
  readonly Designs: ReadonlyArray<Design> | null;
  readonly DesignsCount: number | null;
  readonly dailyReports: ReadonlyArray<DailyReport> | null;
  readonly dailyReportsCount: number | null;
  readonly createdAt: DateTime | null;
};

export type UserapprovalsArgs = {
  readonly where?: ApprovalWhereInput;
  readonly orderBy?: TSGQLMaybeArray<ApprovalOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: ApprovalWhereUniqueInput | null;
};

export type UserapprovalsCountArgs = {
  readonly where?: ApprovalWhereInput;
};

export type UserdescriptionsArgs = {
  readonly where?: DescriptionWhereInput;
  readonly orderBy?: TSGQLMaybeArray<DescriptionOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: DescriptionWhereUniqueInput | null;
};

export type UserdescriptionsCountArgs = {
  readonly where?: DescriptionWhereInput;
};

export type UserapprovedContractsArgs = {
  readonly where?: ContractWhereInput;
  readonly orderBy?: TSGQLMaybeArray<ContractOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: ContractWhereUniqueInput | null;
};

export type UserapprovedContractsCountArgs = {
  readonly where?: ContractWhereInput;
};

export type UsercontractsArgs = {
  readonly where?: ContractWhereInput;
  readonly orderBy?: TSGQLMaybeArray<ContractOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: ContractWhereUniqueInput | null;
};

export type UsercontractsCountArgs = {
  readonly where?: ContractWhereInput;
};

export type UserDesignsArgs = {
  readonly where?: DesignWhereInput;
  readonly orderBy?: TSGQLMaybeArray<DesignOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: DesignWhereUniqueInput | null;
};

export type UserDesignsCountArgs = {
  readonly where?: DesignWhereInput;
};

export type UserdailyReportsArgs = {
  readonly where?: DailyReportWhereInput;
  readonly orderBy?: TSGQLMaybeArray<DailyReportOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: DailyReportWhereUniqueInput | null;
};

export type UserdailyReportsCountArgs = {
  readonly where?: DailyReportWhereInput;
};

export type PasswordState = {
  readonly __typename: "PasswordState";
  readonly isSet: boolean;
};

export type UserWhereUniqueInput = {
  readonly id?: string | null;
  readonly email?: string | null;
};

export type UserWhereInput = {
  readonly AND?: TSGQLMaybeArray<UserWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<UserWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<UserWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly name?: StringFilter | null;
  readonly email?: StringFilter | null;
  readonly role?: IntNullableFilter | null;
  readonly approvals?: ApprovalManyRelationFilter | null;
  readonly descriptions?: DescriptionManyRelationFilter | null;
  readonly approvedContracts?: ContractManyRelationFilter | null;
  readonly contracts?: ContractManyRelationFilter | null;
  readonly Designs?: DesignManyRelationFilter | null;
  readonly dailyReports?: DailyReportManyRelationFilter | null;
  readonly createdAt?: DateTimeNullableFilter | null;
};

export type ApprovalManyRelationFilter = {
  readonly every?: ApprovalWhereInput | null;
  readonly some?: ApprovalWhereInput | null;
  readonly none?: ApprovalWhereInput | null;
};

export type DesignManyRelationFilter = {
  readonly every?: DesignWhereInput | null;
  readonly some?: DesignWhereInput | null;
  readonly none?: DesignWhereInput | null;
};

export type DailyReportManyRelationFilter = {
  readonly every?: DailyReportWhereInput | null;
  readonly some?: DailyReportWhereInput | null;
  readonly none?: DailyReportWhereInput | null;
};

export type UserOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly name?: OrderDirection | null;
  readonly email?: OrderDirection | null;
  readonly role?: OrderDirection | null;
  readonly createdAt?: OrderDirection | null;
};

export type UserUpdateInput = {
  readonly name?: string | null;
  readonly email?: string | null;
  readonly avatar?: ImageFieldInput | null;
  readonly role?: number | null;
  readonly password?: string | null;
  readonly approvals?: ApprovalRelateToManyForUpdateInput | null;
  readonly descriptions?: DescriptionRelateToManyForUpdateInput | null;
  readonly approvedContracts?: ContractRelateToManyForUpdateInput | null;
  readonly contracts?: ContractRelateToManyForUpdateInput | null;
  readonly Designs?: DesignRelateToManyForUpdateInput | null;
  readonly dailyReports?: DailyReportRelateToManyForUpdateInput | null;
  readonly createdAt?: DateTime | null;
};

export type ApprovalRelateToManyForUpdateInput = {
  readonly disconnect?: TSGQLMaybeArray<ApprovalWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<ApprovalWhereUniqueInput> | null;
  readonly create?: TSGQLMaybeArray<ApprovalCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<ApprovalWhereUniqueInput> | null;
};

export type DesignRelateToManyForUpdateInput = {
  readonly disconnect?: TSGQLMaybeArray<DesignWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<DesignWhereUniqueInput> | null;
  readonly create?: TSGQLMaybeArray<DesignCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<DesignWhereUniqueInput> | null;
};

export type DailyReportRelateToManyForUpdateInput = {
  readonly disconnect?: TSGQLMaybeArray<DailyReportWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<DailyReportWhereUniqueInput> | null;
  readonly create?: TSGQLMaybeArray<DailyReportCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<DailyReportWhereUniqueInput> | null;
};

export type UserUpdateArgs = {
  readonly where: UserWhereUniqueInput;
  readonly data: UserUpdateInput;
};

export type UserCreateInput = {
  readonly name?: string | null;
  readonly email?: string | null;
  readonly avatar?: ImageFieldInput | null;
  readonly role?: number | null;
  readonly password?: string | null;
  readonly approvals?: ApprovalRelateToManyForCreateInput | null;
  readonly descriptions?: DescriptionRelateToManyForCreateInput | null;
  readonly approvedContracts?: ContractRelateToManyForCreateInput | null;
  readonly contracts?: ContractRelateToManyForCreateInput | null;
  readonly Designs?: DesignRelateToManyForCreateInput | null;
  readonly dailyReports?: DailyReportRelateToManyForCreateInput | null;
  readonly createdAt?: DateTime | null;
};

export type ApprovalRelateToManyForCreateInput = {
  readonly create?: TSGQLMaybeArray<ApprovalCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<ApprovalWhereUniqueInput> | null;
};

export type DesignRelateToManyForCreateInput = {
  readonly create?: TSGQLMaybeArray<DesignCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<DesignWhereUniqueInput> | null;
};

export type DailyReportRelateToManyForCreateInput = {
  readonly create?: TSGQLMaybeArray<DailyReportCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<DailyReportWhereUniqueInput> | null;
};

export type Category = {
  readonly __typename: "Category";
  readonly id: string;
  readonly code: string | null;
  readonly title: string | null;
  readonly description: string | null;
  readonly isProtected: boolean | null;
  readonly children: ReadonlyArray<Category> | null;
  readonly childrenCount: number | null;
  readonly parent: Category | null;
  readonly designs: ReadonlyArray<Design> | null;
  readonly designsCount: number | null;
};

export type CategorychildrenArgs = {
  readonly where?: CategoryWhereInput;
  readonly orderBy?: TSGQLMaybeArray<CategoryOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: CategoryWhereUniqueInput | null;
};

export type CategorychildrenCountArgs = {
  readonly where?: CategoryWhereInput;
};

export type CategorydesignsArgs = {
  readonly where?: DesignWhereInput;
  readonly orderBy?: TSGQLMaybeArray<DesignOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: DesignWhereUniqueInput | null;
};

export type CategorydesignsCountArgs = {
  readonly where?: DesignWhereInput;
};

export type CategoryWhereUniqueInput = {
  readonly id?: string | null;
};

export type CategoryWhereInput = {
  readonly AND?: TSGQLMaybeArray<CategoryWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<CategoryWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<CategoryWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly code?: StringFilter | null;
  readonly title?: StringFilter | null;
  readonly description?: StringFilter | null;
  readonly isProtected?: BooleanFilter | null;
  readonly children?: CategoryManyRelationFilter | null;
  readonly parent?: CategoryWhereInput | null;
  readonly designs?: DesignManyRelationFilter | null;
};

export type CategoryManyRelationFilter = {
  readonly every?: CategoryWhereInput | null;
  readonly some?: CategoryWhereInput | null;
  readonly none?: CategoryWhereInput | null;
};

export type CategoryOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly code?: OrderDirection | null;
  readonly title?: OrderDirection | null;
  readonly description?: OrderDirection | null;
  readonly isProtected?: OrderDirection | null;
};

export type CategoryUpdateInput = {
  readonly code?: string | null;
  readonly title?: string | null;
  readonly description?: string | null;
  readonly isProtected?: boolean | null;
  readonly children?: CategoryRelateToManyForUpdateInput | null;
  readonly parent?: CategoryRelateToOneForUpdateInput | null;
  readonly designs?: DesignRelateToManyForUpdateInput | null;
};

export type CategoryRelateToManyForUpdateInput = {
  readonly disconnect?: TSGQLMaybeArray<CategoryWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<CategoryWhereUniqueInput> | null;
  readonly create?: TSGQLMaybeArray<CategoryCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<CategoryWhereUniqueInput> | null;
};

export type CategoryUpdateArgs = {
  readonly where: CategoryWhereUniqueInput;
  readonly data: CategoryUpdateInput;
};

export type CategoryCreateInput = {
  readonly code?: string | null;
  readonly title?: string | null;
  readonly description?: string | null;
  readonly isProtected?: boolean | null;
  readonly children?: CategoryRelateToManyForCreateInput | null;
  readonly parent?: CategoryRelateToOneForCreateInput | null;
  readonly designs?: DesignRelateToManyForCreateInput | null;
};

export type CategoryRelateToManyForCreateInput = {
  readonly create?: TSGQLMaybeArray<CategoryCreateInput> | null;
  readonly connect?: TSGQLMaybeArray<CategoryWhereUniqueInput> | null;
};

export type Log = {
  readonly __typename: "Log";
  readonly id: string;
  readonly type: string | null;
  readonly action: LogActionType | null;
  readonly message: string | null;
  readonly date: DateTime | null;
};

export type LogActionType =
  | "STATEMENT_FINALIZED_REGISTRATION"
  | "STATEMENT_CONFIRMED"
  | "STATEMENT_FINALIZED";

export type LogWhereUniqueInput = {
  readonly id?: string | null;
};

export type LogWhereInput = {
  readonly AND?: TSGQLMaybeArray<LogWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<LogWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<LogWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly type?: StringNullableFilter | null;
  readonly action?: LogActionTypeNullableFilter | null;
  readonly message?: StringFilter | null;
  readonly date?: DateTimeNullableFilter | null;
};

export type LogActionTypeNullableFilter = {
  readonly equals?: LogActionType | null;
  readonly in?: TSGQLMaybeArray<LogActionType> | null;
  readonly notIn?: TSGQLMaybeArray<LogActionType> | null;
  readonly not?: LogActionTypeNullableFilter | null;
};

export type LogOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly type?: OrderDirection | null;
  readonly action?: OrderDirection | null;
  readonly message?: OrderDirection | null;
  readonly date?: OrderDirection | null;
};

export type LogUpdateInput = {
  readonly type?: string | null;
  readonly action?: LogActionType | null;
  readonly message?: string | null;
  readonly date?: DateTime | null;
};

export type LogUpdateArgs = {
  readonly where: LogWhereUniqueInput;
  readonly data: LogUpdateInput;
};

export type LogCreateInput = {
  readonly type?: string | null;
  readonly action?: LogActionType | null;
  readonly message?: string | null;
  readonly date?: DateTime | null;
};

export type Tag = {
  readonly __typename: "Tag";
  readonly id: string;
  readonly name: string | null;
};

export type TagWhereUniqueInput = {
  readonly id?: string | null;
};

export type TagWhereInput = {
  readonly AND?: TSGQLMaybeArray<TagWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<TagWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<TagWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly name?: StringFilter | null;
};

export type TagOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly name?: OrderDirection | null;
};

export type TagUpdateInput = {
  readonly name?: string | null;
};

export type TagUpdateArgs = {
  readonly where: TagWhereUniqueInput;
  readonly data: TagUpdateInput;
};

export type TagCreateInput = {
  readonly name?: string | null;
};

export type Setting = {
  readonly __typename: "Setting";
  readonly id: string;
  readonly sendMessageToTelegram: boolean | null;
  readonly parentCategoryOfDesign: string | null;
  readonly rootCategoryOfGoodsAndServices: string | null;
  readonly contractSample: ReadonlyArray<FileStore> | null;
  readonly contractSampleCount: number | null;
};

export type SettingcontractSampleArgs = {
  readonly where?: FileStoreWhereInput;
  readonly orderBy?: TSGQLMaybeArray<FileStoreOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: FileStoreWhereUniqueInput | null;
};

export type SettingcontractSampleCountArgs = {
  readonly where?: FileStoreWhereInput;
};

export type SettingWhereUniqueInput = {
  readonly id?: string | null;
};

export type SettingWhereInput = {
  readonly AND?: TSGQLMaybeArray<SettingWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<SettingWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<SettingWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly sendMessageToTelegram?: BooleanFilter | null;
  readonly parentCategoryOfDesign?: StringFilter | null;
  readonly rootCategoryOfGoodsAndServices?: StringFilter | null;
  readonly contractSample?: FileStoreManyRelationFilter | null;
};

export type SettingOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly sendMessageToTelegram?: OrderDirection | null;
  readonly parentCategoryOfDesign?: OrderDirection | null;
  readonly rootCategoryOfGoodsAndServices?: OrderDirection | null;
};

export type SettingUpdateInput = {
  readonly sendMessageToTelegram?: boolean | null;
  readonly parentCategoryOfDesign?: string | null;
  readonly rootCategoryOfGoodsAndServices?: string | null;
  readonly contractSample?: FileStoreRelateToManyForUpdateInput | null;
};

export type SettingUpdateArgs = {
  readonly where?: SettingWhereUniqueInput;
  readonly data: SettingUpdateInput;
};

export type SettingCreateInput = {
  readonly sendMessageToTelegram?: boolean | null;
  readonly parentCategoryOfDesign?: string | null;
  readonly rootCategoryOfGoodsAndServices?: string | null;
  readonly contractSample?: FileStoreRelateToManyForCreateInput | null;
};

export type Note = {
  readonly __typename: "Note";
  readonly id: string;
  readonly message: string | null;
  readonly mentions: JSON | null;
  readonly invoice: Invoice | null;
  readonly statement: Statement | null;
  readonly createdAt: DateTime | null;
  readonly updatedAt: DateTime | null;
  readonly createdBy: User | null;
};

export type NoteWhereUniqueInput = {
  readonly id?: string | null;
};

export type NoteWhereInput = {
  readonly AND?: TSGQLMaybeArray<NoteWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<NoteWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<NoteWhereInput> | null;
  readonly id?: IDFilter | null;
  readonly message?: StringFilter | null;
  readonly invoice?: InvoiceWhereInput | null;
  readonly statement?: StatementWhereInput | null;
  readonly createdAt?: DateTimeNullableFilter | null;
  readonly updatedAt?: DateTimeNullableFilter | null;
  readonly createdBy?: UserWhereInput | null;
};

export type NoteOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly message?: OrderDirection | null;
  readonly createdAt?: OrderDirection | null;
  readonly updatedAt?: OrderDirection | null;
};

export type NoteUpdateInput = {
  readonly message?: string | null;
  readonly mentions?: JSON | null;
  readonly invoice?: InvoiceRelateToOneForUpdateInput | null;
  readonly statement?: StatementRelateToOneForUpdateInput | null;
  readonly createdAt?: DateTime | null;
  readonly updatedAt?: DateTime | null;
  readonly createdBy?: UserRelateToOneForUpdateInput | null;
};

export type NoteUpdateArgs = {
  readonly where: NoteWhereUniqueInput;
  readonly data: NoteUpdateInput;
};

export type NoteCreateInput = {
  readonly message?: string | null;
  readonly mentions?: JSON | null;
  readonly invoice?: InvoiceRelateToOneForCreateInput | null;
  readonly statement?: StatementRelateToOneForCreateInput | null;
  readonly createdAt?: DateTime | null;
  readonly updatedAt?: DateTime | null;
  readonly createdBy?: UserRelateToOneForCreateInput | null;
};

export type JSON = any;

export type Mutation = {
  readonly __typename: "Mutation";
  readonly createApproval: Approval | null;
  readonly createApprovals: ReadonlyArray<Approval | null> | null;
  readonly updateApproval: Approval | null;
  readonly updateApprovals: ReadonlyArray<Approval | null> | null;
  readonly deleteApproval: Approval | null;
  readonly deleteApprovals: ReadonlyArray<Approval | null> | null;
  readonly createDescription: Description | null;
  readonly createDescriptions: ReadonlyArray<Description | null> | null;
  readonly updateDescription: Description | null;
  readonly updateDescriptions: ReadonlyArray<Description | null> | null;
  readonly deleteDescription: Description | null;
  readonly deleteDescriptions: ReadonlyArray<Description | null> | null;
  readonly createInvoice: Invoice | null;
  readonly createInvoices: ReadonlyArray<Invoice | null> | null;
  readonly updateInvoice: Invoice | null;
  readonly updateInvoices: ReadonlyArray<Invoice | null> | null;
  readonly deleteInvoice: Invoice | null;
  readonly deleteInvoices: ReadonlyArray<Invoice | null> | null;
  readonly createRow: Row | null;
  readonly createRows: ReadonlyArray<Row | null> | null;
  readonly updateRow: Row | null;
  readonly updateRows: ReadonlyArray<Row | null> | null;
  readonly deleteRow: Row | null;
  readonly deleteRows: ReadonlyArray<Row | null> | null;
  readonly createContract: Contract | null;
  readonly createContracts: ReadonlyArray<Contract | null> | null;
  readonly updateContract: Contract | null;
  readonly updateContracts: ReadonlyArray<Contract | null> | null;
  readonly deleteContract: Contract | null;
  readonly deleteContracts: ReadonlyArray<Contract | null> | null;
  readonly createStatement: Statement | null;
  readonly createStatements: ReadonlyArray<Statement | null> | null;
  readonly updateStatement: Statement | null;
  readonly updateStatements: ReadonlyArray<Statement | null> | null;
  readonly deleteStatement: Statement | null;
  readonly deleteStatements: ReadonlyArray<Statement | null> | null;
  readonly createStatementItem: StatementItem | null;
  readonly createStatementItems: ReadonlyArray<StatementItem | null> | null;
  readonly updateStatementItem: StatementItem | null;
  readonly updateStatementItems: ReadonlyArray<StatementItem | null> | null;
  readonly deleteStatementItem: StatementItem | null;
  readonly deleteStatementItems: ReadonlyArray<StatementItem | null> | null;
  readonly createPayment: Payment | null;
  readonly createPayments: ReadonlyArray<Payment | null> | null;
  readonly updatePayment: Payment | null;
  readonly updatePayments: ReadonlyArray<Payment | null> | null;
  readonly deletePayment: Payment | null;
  readonly deletePayments: ReadonlyArray<Payment | null> | null;
  readonly createImageStore: ImageStore | null;
  readonly createImageStores: ReadonlyArray<ImageStore | null> | null;
  readonly updateImageStore: ImageStore | null;
  readonly updateImageStores: ReadonlyArray<ImageStore | null> | null;
  readonly deleteImageStore: ImageStore | null;
  readonly deleteImageStores: ReadonlyArray<ImageStore | null> | null;
  readonly createConstractor: Constractor | null;
  readonly createConstractors: ReadonlyArray<Constractor | null> | null;
  readonly updateConstractor: Constractor | null;
  readonly updateConstractors: ReadonlyArray<Constractor | null> | null;
  readonly deleteConstractor: Constractor | null;
  readonly deleteConstractors: ReadonlyArray<Constractor | null> | null;
  readonly createFileStore: FileStore | null;
  readonly createFileStores: ReadonlyArray<FileStore | null> | null;
  readonly updateFileStore: FileStore | null;
  readonly updateFileStores: ReadonlyArray<FileStore | null> | null;
  readonly deleteFileStore: FileStore | null;
  readonly deleteFileStores: ReadonlyArray<FileStore | null> | null;
  readonly createDesign: Design | null;
  readonly createDesigns: ReadonlyArray<Design | null> | null;
  readonly updateDesign: Design | null;
  readonly updateDesigns: ReadonlyArray<Design | null> | null;
  readonly deleteDesign: Design | null;
  readonly deleteDesigns: ReadonlyArray<Design | null> | null;
  readonly createDailyReport: DailyReport | null;
  readonly createDailyReports: ReadonlyArray<DailyReport | null> | null;
  readonly updateDailyReport: DailyReport | null;
  readonly updateDailyReports: ReadonlyArray<DailyReport | null> | null;
  readonly deleteDailyReport: DailyReport | null;
  readonly deleteDailyReports: ReadonlyArray<DailyReport | null> | null;
  readonly createSafetyReport: SafetyReport | null;
  readonly createSafetyReports: ReadonlyArray<SafetyReport | null> | null;
  readonly updateSafetyReport: SafetyReport | null;
  readonly updateSafetyReports: ReadonlyArray<SafetyReport | null> | null;
  readonly deleteSafetyReport: SafetyReport | null;
  readonly deleteSafetyReports: ReadonlyArray<SafetyReport | null> | null;
  readonly createUser: User | null;
  readonly createUsers: ReadonlyArray<User | null> | null;
  readonly updateUser: User | null;
  readonly updateUsers: ReadonlyArray<User | null> | null;
  readonly deleteUser: User | null;
  readonly deleteUsers: ReadonlyArray<User | null> | null;
  readonly createCategory: Category | null;
  readonly createCategories: ReadonlyArray<Category | null> | null;
  readonly updateCategory: Category | null;
  readonly updateCategories: ReadonlyArray<Category | null> | null;
  readonly deleteCategory: Category | null;
  readonly deleteCategories: ReadonlyArray<Category | null> | null;
  readonly createLog: Log | null;
  readonly createLogs: ReadonlyArray<Log | null> | null;
  readonly updateLog: Log | null;
  readonly updateLogs: ReadonlyArray<Log | null> | null;
  readonly deleteLog: Log | null;
  readonly deleteLogs: ReadonlyArray<Log | null> | null;
  readonly createTag: Tag | null;
  readonly createTags: ReadonlyArray<Tag | null> | null;
  readonly updateTag: Tag | null;
  readonly updateTags: ReadonlyArray<Tag | null> | null;
  readonly deleteTag: Tag | null;
  readonly deleteTags: ReadonlyArray<Tag | null> | null;
  readonly createSetting: Setting | null;
  readonly createSettings: ReadonlyArray<Setting | null> | null;
  readonly updateSetting: Setting | null;
  readonly updateSettings: ReadonlyArray<Setting | null> | null;
  readonly deleteSetting: Setting | null;
  readonly deleteSettings: ReadonlyArray<Setting | null> | null;
  readonly createNote: Note | null;
  readonly createNotes: ReadonlyArray<Note | null> | null;
  readonly updateNote: Note | null;
  readonly updateNotes: ReadonlyArray<Note | null> | null;
  readonly deleteNote: Note | null;
  readonly deleteNotes: ReadonlyArray<Note | null> | null;
  readonly endSession: boolean;
  readonly authenticateUserWithPassword: UserAuthenticationWithPasswordResult | null;
  readonly createInitialUser: UserAuthenticationWithPasswordSuccess;
};

export type MutationcreateApprovalArgs = {
  readonly data: ApprovalCreateInput;
};

export type MutationcreateApprovalsArgs = {
  readonly data: TSGQLMaybeArray<ApprovalCreateInput>;
};

export type MutationupdateApprovalArgs = {
  readonly where: ApprovalWhereUniqueInput;
  readonly data: ApprovalUpdateInput;
};

export type MutationupdateApprovalsArgs = {
  readonly data: TSGQLMaybeArray<ApprovalUpdateArgs>;
};

export type MutationdeleteApprovalArgs = {
  readonly where: ApprovalWhereUniqueInput;
};

export type MutationdeleteApprovalsArgs = {
  readonly where: TSGQLMaybeArray<ApprovalWhereUniqueInput>;
};

export type MutationcreateDescriptionArgs = {
  readonly data: DescriptionCreateInput;
};

export type MutationcreateDescriptionsArgs = {
  readonly data: TSGQLMaybeArray<DescriptionCreateInput>;
};

export type MutationupdateDescriptionArgs = {
  readonly where: DescriptionWhereUniqueInput;
  readonly data: DescriptionUpdateInput;
};

export type MutationupdateDescriptionsArgs = {
  readonly data: TSGQLMaybeArray<DescriptionUpdateArgs>;
};

export type MutationdeleteDescriptionArgs = {
  readonly where: DescriptionWhereUniqueInput;
};

export type MutationdeleteDescriptionsArgs = {
  readonly where: TSGQLMaybeArray<DescriptionWhereUniqueInput>;
};

export type MutationcreateInvoiceArgs = {
  readonly data: InvoiceCreateInput;
};

export type MutationcreateInvoicesArgs = {
  readonly data: TSGQLMaybeArray<InvoiceCreateInput>;
};

export type MutationupdateInvoiceArgs = {
  readonly where: InvoiceWhereUniqueInput;
  readonly data: InvoiceUpdateInput;
};

export type MutationupdateInvoicesArgs = {
  readonly data: TSGQLMaybeArray<InvoiceUpdateArgs>;
};

export type MutationdeleteInvoiceArgs = {
  readonly where: InvoiceWhereUniqueInput;
};

export type MutationdeleteInvoicesArgs = {
  readonly where: TSGQLMaybeArray<InvoiceWhereUniqueInput>;
};

export type MutationcreateRowArgs = {
  readonly data: RowCreateInput;
};

export type MutationcreateRowsArgs = {
  readonly data: TSGQLMaybeArray<RowCreateInput>;
};

export type MutationupdateRowArgs = {
  readonly where: RowWhereUniqueInput;
  readonly data: RowUpdateInput;
};

export type MutationupdateRowsArgs = {
  readonly data: TSGQLMaybeArray<RowUpdateArgs>;
};

export type MutationdeleteRowArgs = {
  readonly where: RowWhereUniqueInput;
};

export type MutationdeleteRowsArgs = {
  readonly where: TSGQLMaybeArray<RowWhereUniqueInput>;
};

export type MutationcreateContractArgs = {
  readonly data: ContractCreateInput;
};

export type MutationcreateContractsArgs = {
  readonly data: TSGQLMaybeArray<ContractCreateInput>;
};

export type MutationupdateContractArgs = {
  readonly where: ContractWhereUniqueInput;
  readonly data: ContractUpdateInput;
};

export type MutationupdateContractsArgs = {
  readonly data: TSGQLMaybeArray<ContractUpdateArgs>;
};

export type MutationdeleteContractArgs = {
  readonly where: ContractWhereUniqueInput;
};

export type MutationdeleteContractsArgs = {
  readonly where: TSGQLMaybeArray<ContractWhereUniqueInput>;
};

export type MutationcreateStatementArgs = {
  readonly data: StatementCreateInput;
};

export type MutationcreateStatementsArgs = {
  readonly data: TSGQLMaybeArray<StatementCreateInput>;
};

export type MutationupdateStatementArgs = {
  readonly where: StatementWhereUniqueInput;
  readonly data: StatementUpdateInput;
};

export type MutationupdateStatementsArgs = {
  readonly data: TSGQLMaybeArray<StatementUpdateArgs>;
};

export type MutationdeleteStatementArgs = {
  readonly where: StatementWhereUniqueInput;
};

export type MutationdeleteStatementsArgs = {
  readonly where: TSGQLMaybeArray<StatementWhereUniqueInput>;
};

export type MutationcreateStatementItemArgs = {
  readonly data: StatementItemCreateInput;
};

export type MutationcreateStatementItemsArgs = {
  readonly data: TSGQLMaybeArray<StatementItemCreateInput>;
};

export type MutationupdateStatementItemArgs = {
  readonly where: StatementItemWhereUniqueInput;
  readonly data: StatementItemUpdateInput;
};

export type MutationupdateStatementItemsArgs = {
  readonly data: TSGQLMaybeArray<StatementItemUpdateArgs>;
};

export type MutationdeleteStatementItemArgs = {
  readonly where: StatementItemWhereUniqueInput;
};

export type MutationdeleteStatementItemsArgs = {
  readonly where: TSGQLMaybeArray<StatementItemWhereUniqueInput>;
};

export type MutationcreatePaymentArgs = {
  readonly data: PaymentCreateInput;
};

export type MutationcreatePaymentsArgs = {
  readonly data: TSGQLMaybeArray<PaymentCreateInput>;
};

export type MutationupdatePaymentArgs = {
  readonly where: PaymentWhereUniqueInput;
  readonly data: PaymentUpdateInput;
};

export type MutationupdatePaymentsArgs = {
  readonly data: TSGQLMaybeArray<PaymentUpdateArgs>;
};

export type MutationdeletePaymentArgs = {
  readonly where: PaymentWhereUniqueInput;
};

export type MutationdeletePaymentsArgs = {
  readonly where: TSGQLMaybeArray<PaymentWhereUniqueInput>;
};

export type MutationcreateImageStoreArgs = {
  readonly data: ImageStoreCreateInput;
};

export type MutationcreateImageStoresArgs = {
  readonly data: TSGQLMaybeArray<ImageStoreCreateInput>;
};

export type MutationupdateImageStoreArgs = {
  readonly where: ImageStoreWhereUniqueInput;
  readonly data: ImageStoreUpdateInput;
};

export type MutationupdateImageStoresArgs = {
  readonly data: TSGQLMaybeArray<ImageStoreUpdateArgs>;
};

export type MutationdeleteImageStoreArgs = {
  readonly where: ImageStoreWhereUniqueInput;
};

export type MutationdeleteImageStoresArgs = {
  readonly where: TSGQLMaybeArray<ImageStoreWhereUniqueInput>;
};

export type MutationcreateConstractorArgs = {
  readonly data: ConstractorCreateInput;
};

export type MutationcreateConstractorsArgs = {
  readonly data: TSGQLMaybeArray<ConstractorCreateInput>;
};

export type MutationupdateConstractorArgs = {
  readonly where: ConstractorWhereUniqueInput;
  readonly data: ConstractorUpdateInput;
};

export type MutationupdateConstractorsArgs = {
  readonly data: TSGQLMaybeArray<ConstractorUpdateArgs>;
};

export type MutationdeleteConstractorArgs = {
  readonly where: ConstractorWhereUniqueInput;
};

export type MutationdeleteConstractorsArgs = {
  readonly where: TSGQLMaybeArray<ConstractorWhereUniqueInput>;
};

export type MutationcreateFileStoreArgs = {
  readonly data: FileStoreCreateInput;
};

export type MutationcreateFileStoresArgs = {
  readonly data: TSGQLMaybeArray<FileStoreCreateInput>;
};

export type MutationupdateFileStoreArgs = {
  readonly where: FileStoreWhereUniqueInput;
  readonly data: FileStoreUpdateInput;
};

export type MutationupdateFileStoresArgs = {
  readonly data: TSGQLMaybeArray<FileStoreUpdateArgs>;
};

export type MutationdeleteFileStoreArgs = {
  readonly where: FileStoreWhereUniqueInput;
};

export type MutationdeleteFileStoresArgs = {
  readonly where: TSGQLMaybeArray<FileStoreWhereUniqueInput>;
};

export type MutationcreateDesignArgs = {
  readonly data: DesignCreateInput;
};

export type MutationcreateDesignsArgs = {
  readonly data: TSGQLMaybeArray<DesignCreateInput>;
};

export type MutationupdateDesignArgs = {
  readonly where: DesignWhereUniqueInput;
  readonly data: DesignUpdateInput;
};

export type MutationupdateDesignsArgs = {
  readonly data: TSGQLMaybeArray<DesignUpdateArgs>;
};

export type MutationdeleteDesignArgs = {
  readonly where: DesignWhereUniqueInput;
};

export type MutationdeleteDesignsArgs = {
  readonly where: TSGQLMaybeArray<DesignWhereUniqueInput>;
};

export type MutationcreateDailyReportArgs = {
  readonly data: DailyReportCreateInput;
};

export type MutationcreateDailyReportsArgs = {
  readonly data: TSGQLMaybeArray<DailyReportCreateInput>;
};

export type MutationupdateDailyReportArgs = {
  readonly where: DailyReportWhereUniqueInput;
  readonly data: DailyReportUpdateInput;
};

export type MutationupdateDailyReportsArgs = {
  readonly data: TSGQLMaybeArray<DailyReportUpdateArgs>;
};

export type MutationdeleteDailyReportArgs = {
  readonly where: DailyReportWhereUniqueInput;
};

export type MutationdeleteDailyReportsArgs = {
  readonly where: TSGQLMaybeArray<DailyReportWhereUniqueInput>;
};

export type MutationcreateSafetyReportArgs = {
  readonly data: SafetyReportCreateInput;
};

export type MutationcreateSafetyReportsArgs = {
  readonly data: TSGQLMaybeArray<SafetyReportCreateInput>;
};

export type MutationupdateSafetyReportArgs = {
  readonly where: SafetyReportWhereUniqueInput;
  readonly data: SafetyReportUpdateInput;
};

export type MutationupdateSafetyReportsArgs = {
  readonly data: TSGQLMaybeArray<SafetyReportUpdateArgs>;
};

export type MutationdeleteSafetyReportArgs = {
  readonly where: SafetyReportWhereUniqueInput;
};

export type MutationdeleteSafetyReportsArgs = {
  readonly where: TSGQLMaybeArray<SafetyReportWhereUniqueInput>;
};

export type MutationcreateUserArgs = {
  readonly data: UserCreateInput;
};

export type MutationcreateUsersArgs = {
  readonly data: TSGQLMaybeArray<UserCreateInput>;
};

export type MutationupdateUserArgs = {
  readonly where: UserWhereUniqueInput;
  readonly data: UserUpdateInput;
};

export type MutationupdateUsersArgs = {
  readonly data: TSGQLMaybeArray<UserUpdateArgs>;
};

export type MutationdeleteUserArgs = {
  readonly where: UserWhereUniqueInput;
};

export type MutationdeleteUsersArgs = {
  readonly where: TSGQLMaybeArray<UserWhereUniqueInput>;
};

export type MutationcreateCategoryArgs = {
  readonly data: CategoryCreateInput;
};

export type MutationcreateCategoriesArgs = {
  readonly data: TSGQLMaybeArray<CategoryCreateInput>;
};

export type MutationupdateCategoryArgs = {
  readonly where: CategoryWhereUniqueInput;
  readonly data: CategoryUpdateInput;
};

export type MutationupdateCategoriesArgs = {
  readonly data: TSGQLMaybeArray<CategoryUpdateArgs>;
};

export type MutationdeleteCategoryArgs = {
  readonly where: CategoryWhereUniqueInput;
};

export type MutationdeleteCategoriesArgs = {
  readonly where: TSGQLMaybeArray<CategoryWhereUniqueInput>;
};

export type MutationcreateLogArgs = {
  readonly data: LogCreateInput;
};

export type MutationcreateLogsArgs = {
  readonly data: TSGQLMaybeArray<LogCreateInput>;
};

export type MutationupdateLogArgs = {
  readonly where: LogWhereUniqueInput;
  readonly data: LogUpdateInput;
};

export type MutationupdateLogsArgs = {
  readonly data: TSGQLMaybeArray<LogUpdateArgs>;
};

export type MutationdeleteLogArgs = {
  readonly where: LogWhereUniqueInput;
};

export type MutationdeleteLogsArgs = {
  readonly where: TSGQLMaybeArray<LogWhereUniqueInput>;
};

export type MutationcreateTagArgs = {
  readonly data: TagCreateInput;
};

export type MutationcreateTagsArgs = {
  readonly data: TSGQLMaybeArray<TagCreateInput>;
};

export type MutationupdateTagArgs = {
  readonly where: TagWhereUniqueInput;
  readonly data: TagUpdateInput;
};

export type MutationupdateTagsArgs = {
  readonly data: TSGQLMaybeArray<TagUpdateArgs>;
};

export type MutationdeleteTagArgs = {
  readonly where: TagWhereUniqueInput;
};

export type MutationdeleteTagsArgs = {
  readonly where: TSGQLMaybeArray<TagWhereUniqueInput>;
};

export type MutationcreateSettingArgs = {
  readonly data: SettingCreateInput;
};

export type MutationcreateSettingsArgs = {
  readonly data: TSGQLMaybeArray<SettingCreateInput>;
};

export type MutationupdateSettingArgs = {
  readonly where?: SettingWhereUniqueInput;
  readonly data: SettingUpdateInput;
};

export type MutationupdateSettingsArgs = {
  readonly data: TSGQLMaybeArray<SettingUpdateArgs>;
};

export type MutationdeleteSettingArgs = {
  readonly where?: SettingWhereUniqueInput;
};

export type MutationdeleteSettingsArgs = {
  readonly where: TSGQLMaybeArray<SettingWhereUniqueInput>;
};

export type MutationcreateNoteArgs = {
  readonly data: NoteCreateInput;
};

export type MutationcreateNotesArgs = {
  readonly data: TSGQLMaybeArray<NoteCreateInput>;
};

export type MutationupdateNoteArgs = {
  readonly where: NoteWhereUniqueInput;
  readonly data: NoteUpdateInput;
};

export type MutationupdateNotesArgs = {
  readonly data: TSGQLMaybeArray<NoteUpdateArgs>;
};

export type MutationdeleteNoteArgs = {
  readonly where: NoteWhereUniqueInput;
};

export type MutationdeleteNotesArgs = {
  readonly where: TSGQLMaybeArray<NoteWhereUniqueInput>;
};

export type MutationauthenticateUserWithPasswordArgs = {
  readonly email: string;
  readonly password: string;
};

export type MutationcreateInitialUserArgs = {
  readonly data: CreateInitialUserInput;
};

export type UserAuthenticationWithPasswordResult = UserAuthenticationWithPasswordSuccess | UserAuthenticationWithPasswordFailure;

export type UserAuthenticationWithPasswordSuccess = {
  readonly __typename: "UserAuthenticationWithPasswordSuccess";
  readonly sessionToken: string;
  readonly item: User;
};

export type UserAuthenticationWithPasswordFailure = {
  readonly __typename: "UserAuthenticationWithPasswordFailure";
  readonly message: string;
};

export type CreateInitialUserInput = {
  readonly name?: string | null;
  readonly email?: string | null;
  readonly role?: number | null;
  readonly password?: string | null;
};

export type Query = {
  readonly __typename: "Query";
  readonly approvals: ReadonlyArray<Approval> | null;
  readonly approval: Approval | null;
  readonly approvalsCount: number | null;
  readonly descriptions: ReadonlyArray<Description> | null;
  readonly description: Description | null;
  readonly descriptionsCount: number | null;
  readonly invoices: ReadonlyArray<Invoice> | null;
  readonly invoice: Invoice | null;
  readonly invoicesCount: number | null;
  readonly rows: ReadonlyArray<Row> | null;
  readonly row: Row | null;
  readonly rowsCount: number | null;
  readonly contracts: ReadonlyArray<Contract> | null;
  readonly contract: Contract | null;
  readonly contractsCount: number | null;
  readonly statements: ReadonlyArray<Statement> | null;
  readonly statement: Statement | null;
  readonly statementsCount: number | null;
  readonly statementItems: ReadonlyArray<StatementItem> | null;
  readonly statementItem: StatementItem | null;
  readonly statementItemsCount: number | null;
  readonly payments: ReadonlyArray<Payment> | null;
  readonly payment: Payment | null;
  readonly paymentsCount: number | null;
  readonly imageStores: ReadonlyArray<ImageStore> | null;
  readonly imageStore: ImageStore | null;
  readonly imageStoresCount: number | null;
  readonly constractors: ReadonlyArray<Constractor> | null;
  readonly constractor: Constractor | null;
  readonly constractorsCount: number | null;
  readonly fileStores: ReadonlyArray<FileStore> | null;
  readonly fileStore: FileStore | null;
  readonly fileStoresCount: number | null;
  readonly designs: ReadonlyArray<Design> | null;
  readonly design: Design | null;
  readonly designsCount: number | null;
  readonly dailyReports: ReadonlyArray<DailyReport> | null;
  readonly dailyReport: DailyReport | null;
  readonly dailyReportsCount: number | null;
  readonly safetyReports: ReadonlyArray<SafetyReport> | null;
  readonly safetyReport: SafetyReport | null;
  readonly safetyReportsCount: number | null;
  readonly users: ReadonlyArray<User> | null;
  readonly user: User | null;
  readonly usersCount: number | null;
  readonly categories: ReadonlyArray<Category> | null;
  readonly category: Category | null;
  readonly categoriesCount: number | null;
  readonly logs: ReadonlyArray<Log> | null;
  readonly log: Log | null;
  readonly logsCount: number | null;
  readonly tags: ReadonlyArray<Tag> | null;
  readonly tag: Tag | null;
  readonly tagsCount: number | null;
  readonly settings: ReadonlyArray<Setting> | null;
  readonly setting: Setting | null;
  readonly settingsCount: number | null;
  readonly notes: ReadonlyArray<Note> | null;
  readonly note: Note | null;
  readonly notesCount: number | null;
  readonly keystone: KeystoneMeta;
  readonly authenticatedItem: AuthenticatedItem | null;
};

export type QueryapprovalsArgs = {
  readonly where?: ApprovalWhereInput;
  readonly orderBy?: TSGQLMaybeArray<ApprovalOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: ApprovalWhereUniqueInput | null;
};

export type QueryapprovalArgs = {
  readonly where: ApprovalWhereUniqueInput;
};

export type QueryapprovalsCountArgs = {
  readonly where?: ApprovalWhereInput;
};

export type QuerydescriptionsArgs = {
  readonly where?: DescriptionWhereInput;
  readonly orderBy?: TSGQLMaybeArray<DescriptionOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: DescriptionWhereUniqueInput | null;
};

export type QuerydescriptionArgs = {
  readonly where: DescriptionWhereUniqueInput;
};

export type QuerydescriptionsCountArgs = {
  readonly where?: DescriptionWhereInput;
};

export type QueryinvoicesArgs = {
  readonly where?: InvoiceWhereInput;
  readonly orderBy?: TSGQLMaybeArray<InvoiceOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: InvoiceWhereUniqueInput | null;
};

export type QueryinvoiceArgs = {
  readonly where: InvoiceWhereUniqueInput;
};

export type QueryinvoicesCountArgs = {
  readonly where?: InvoiceWhereInput;
};

export type QueryrowsArgs = {
  readonly where?: RowWhereInput;
  readonly orderBy?: TSGQLMaybeArray<RowOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: RowWhereUniqueInput | null;
};

export type QueryrowArgs = {
  readonly where: RowWhereUniqueInput;
};

export type QueryrowsCountArgs = {
  readonly where?: RowWhereInput;
};

export type QuerycontractsArgs = {
  readonly where?: ContractWhereInput;
  readonly orderBy?: TSGQLMaybeArray<ContractOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: ContractWhereUniqueInput | null;
};

export type QuerycontractArgs = {
  readonly where: ContractWhereUniqueInput;
};

export type QuerycontractsCountArgs = {
  readonly where?: ContractWhereInput;
};

export type QuerystatementsArgs = {
  readonly where?: StatementWhereInput;
  readonly orderBy?: TSGQLMaybeArray<StatementOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: StatementWhereUniqueInput | null;
};

export type QuerystatementArgs = {
  readonly where: StatementWhereUniqueInput;
};

export type QuerystatementsCountArgs = {
  readonly where?: StatementWhereInput;
};

export type QuerystatementItemsArgs = {
  readonly where?: StatementItemWhereInput;
  readonly orderBy?: TSGQLMaybeArray<StatementItemOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: StatementItemWhereUniqueInput | null;
};

export type QuerystatementItemArgs = {
  readonly where: StatementItemWhereUniqueInput;
};

export type QuerystatementItemsCountArgs = {
  readonly where?: StatementItemWhereInput;
};

export type QuerypaymentsArgs = {
  readonly where?: PaymentWhereInput;
  readonly orderBy?: TSGQLMaybeArray<PaymentOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: PaymentWhereUniqueInput | null;
};

export type QuerypaymentArgs = {
  readonly where: PaymentWhereUniqueInput;
};

export type QuerypaymentsCountArgs = {
  readonly where?: PaymentWhereInput;
};

export type QueryimageStoresArgs = {
  readonly where?: ImageStoreWhereInput;
  readonly orderBy?: TSGQLMaybeArray<ImageStoreOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: ImageStoreWhereUniqueInput | null;
};

export type QueryimageStoreArgs = {
  readonly where: ImageStoreWhereUniqueInput;
};

export type QueryimageStoresCountArgs = {
  readonly where?: ImageStoreWhereInput;
};

export type QueryconstractorsArgs = {
  readonly where?: ConstractorWhereInput;
  readonly orderBy?: TSGQLMaybeArray<ConstractorOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: ConstractorWhereUniqueInput | null;
};

export type QueryconstractorArgs = {
  readonly where: ConstractorWhereUniqueInput;
};

export type QueryconstractorsCountArgs = {
  readonly where?: ConstractorWhereInput;
};

export type QueryfileStoresArgs = {
  readonly where?: FileStoreWhereInput;
  readonly orderBy?: TSGQLMaybeArray<FileStoreOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: FileStoreWhereUniqueInput | null;
};

export type QueryfileStoreArgs = {
  readonly where: FileStoreWhereUniqueInput;
};

export type QueryfileStoresCountArgs = {
  readonly where?: FileStoreWhereInput;
};

export type QuerydesignsArgs = {
  readonly where?: DesignWhereInput;
  readonly orderBy?: TSGQLMaybeArray<DesignOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: DesignWhereUniqueInput | null;
};

export type QuerydesignArgs = {
  readonly where: DesignWhereUniqueInput;
};

export type QuerydesignsCountArgs = {
  readonly where?: DesignWhereInput;
};

export type QuerydailyReportsArgs = {
  readonly where?: DailyReportWhereInput;
  readonly orderBy?: TSGQLMaybeArray<DailyReportOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: DailyReportWhereUniqueInput | null;
};

export type QuerydailyReportArgs = {
  readonly where: DailyReportWhereUniqueInput;
};

export type QuerydailyReportsCountArgs = {
  readonly where?: DailyReportWhereInput;
};

export type QuerysafetyReportsArgs = {
  readonly where?: SafetyReportWhereInput;
  readonly orderBy?: TSGQLMaybeArray<SafetyReportOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: SafetyReportWhereUniqueInput | null;
};

export type QuerysafetyReportArgs = {
  readonly where: SafetyReportWhereUniqueInput;
};

export type QuerysafetyReportsCountArgs = {
  readonly where?: SafetyReportWhereInput;
};

export type QueryusersArgs = {
  readonly where?: UserWhereInput;
  readonly orderBy?: TSGQLMaybeArray<UserOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: UserWhereUniqueInput | null;
};

export type QueryuserArgs = {
  readonly where: UserWhereUniqueInput;
};

export type QueryusersCountArgs = {
  readonly where?: UserWhereInput;
};

export type QuerycategoriesArgs = {
  readonly where?: CategoryWhereInput;
  readonly orderBy?: TSGQLMaybeArray<CategoryOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: CategoryWhereUniqueInput | null;
};

export type QuerycategoryArgs = {
  readonly where: CategoryWhereUniqueInput;
};

export type QuerycategoriesCountArgs = {
  readonly where?: CategoryWhereInput;
};

export type QuerylogsArgs = {
  readonly where?: LogWhereInput;
  readonly orderBy?: TSGQLMaybeArray<LogOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: LogWhereUniqueInput | null;
};

export type QuerylogArgs = {
  readonly where: LogWhereUniqueInput;
};

export type QuerylogsCountArgs = {
  readonly where?: LogWhereInput;
};

export type QuerytagsArgs = {
  readonly where?: TagWhereInput;
  readonly orderBy?: TSGQLMaybeArray<TagOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: TagWhereUniqueInput | null;
};

export type QuerytagArgs = {
  readonly where: TagWhereUniqueInput;
};

export type QuerytagsCountArgs = {
  readonly where?: TagWhereInput;
};

export type QuerysettingsArgs = {
  readonly where?: SettingWhereInput;
  readonly orderBy?: TSGQLMaybeArray<SettingOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: SettingWhereUniqueInput | null;
};

export type QuerysettingArgs = {
  readonly where?: SettingWhereUniqueInput;
};

export type QuerysettingsCountArgs = {
  readonly where?: SettingWhereInput;
};

export type QuerynotesArgs = {
  readonly where?: NoteWhereInput;
  readonly orderBy?: TSGQLMaybeArray<NoteOrderByInput>;
  readonly take?: number | null;
  readonly skip?: number;
  readonly cursor?: NoteWhereUniqueInput | null;
};

export type QuerynoteArgs = {
  readonly where: NoteWhereUniqueInput;
};

export type QuerynotesCountArgs = {
  readonly where?: NoteWhereInput;
};

export type AuthenticatedItem = User;

export type KeystoneMeta = {
  readonly __typename: "KeystoneMeta";
  readonly adminMeta: KeystoneAdminMeta;
};

export type KeystoneAdminMeta = {
  readonly __typename: "KeystoneAdminMeta";
  readonly lists: ReadonlyArray<KeystoneAdminUIListMeta>;
  readonly list: KeystoneAdminUIListMeta | null;
};

export type KeystoneAdminMetalistArgs = {
  readonly key: string;
};

export type KeystoneAdminUIListMeta = {
  readonly __typename: "KeystoneAdminUIListMeta";
  readonly key: string;
  readonly itemQueryName: string;
  readonly listQueryName: string;
  readonly hideCreate: boolean;
  readonly hideDelete: boolean;
  readonly path: string;
  readonly label: string;
  readonly singular: string;
  readonly plural: string;
  readonly description: string | null;
  readonly initialColumns: ReadonlyArray<string>;
  readonly pageSize: number;
  readonly labelField: string;
  readonly fields: ReadonlyArray<KeystoneAdminUIFieldMeta>;
  readonly groups: ReadonlyArray<KeystoneAdminUIFieldGroupMeta>;
  readonly initialSort: KeystoneAdminUISort | null;
  readonly isHidden: boolean;
  readonly isSingleton: boolean;
};

export type KeystoneAdminUIFieldMeta = {
  readonly __typename: "KeystoneAdminUIFieldMeta";
  readonly path: string;
  readonly label: string;
  readonly description: string | null;
  readonly isOrderable: boolean;
  readonly isFilterable: boolean;
  readonly isNonNull: ReadonlyArray<KeystoneAdminUIFieldMetaIsNonNull> | null;
  readonly fieldMeta: JSON | null;
  readonly viewsIndex: number;
  readonly customViewsIndex: number | null;
  readonly createView: KeystoneAdminUIFieldMetaCreateView;
  readonly listView: KeystoneAdminUIFieldMetaListView;
  readonly itemView: KeystoneAdminUIFieldMetaItemView | null;
  readonly search: QueryMode | null;
};

export type KeystoneAdminUIFieldMetaitemViewArgs = {
  readonly id?: string | null;
};

export type KeystoneAdminUIFieldMetaIsNonNull =
  | "read"
  | "create"
  | "update";

export type KeystoneAdminUIFieldMetaCreateView = {
  readonly __typename: "KeystoneAdminUIFieldMetaCreateView";
  readonly fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode;
};

export type KeystoneAdminUIFieldMetaCreateViewFieldMode =
  | "edit"
  | "hidden";

export type KeystoneAdminUIFieldMetaListView = {
  readonly __typename: "KeystoneAdminUIFieldMetaListView";
  readonly fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode;
};

export type KeystoneAdminUIFieldMetaListViewFieldMode =
  | "read"
  | "hidden";

export type KeystoneAdminUIFieldMetaItemView = {
  readonly __typename: "KeystoneAdminUIFieldMetaItemView";
  readonly fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode | null;
  readonly fieldPosition: KeystoneAdminUIFieldMetaItemViewFieldPosition | null;
};

export type KeystoneAdminUIFieldMetaItemViewFieldMode =
  | "edit"
  | "read"
  | "hidden";

export type KeystoneAdminUIFieldMetaItemViewFieldPosition =
  | "form"
  | "sidebar";

export type QueryMode =
  | "default"
  | "insensitive";

export type KeystoneAdminUIFieldGroupMeta = {
  readonly __typename: "KeystoneAdminUIFieldGroupMeta";
  readonly label: string;
  readonly description: string | null;
  readonly fields: ReadonlyArray<KeystoneAdminUIFieldMeta>;
};

export type KeystoneAdminUISort = {
  readonly __typename: "KeystoneAdminUISort";
  readonly field: string;
  readonly direction: KeystoneAdminUISortDirection;
};

export type KeystoneAdminUISortDirection =
  | "ASC"
  | "DESC";

type TSGQLMaybeArray<T> = ReadonlyArray<T> | T

export {};
export interface TSGQLDocuments extends Record<string, import('@ts-gql/tag').TypedDocumentNode<import('@ts-gql/tag').BaseDocumentTypes>> {}

export type TSGQLRequiredFragments<T> = (providedFragments: T) => T;